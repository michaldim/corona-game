(()=>{"use strict";var e={586:(e,t,n)=>{n.d(t,{Z:()=>m});var o=n(537),A=n.n(o),r=n(645),a=n.n(r),s=n(667),i=n.n(s),c=new URL(n(73),n.b),l=new URL(n(429),n.b),p=new URL(n(522),n.b),u=new URL(n(787),n.b),d=a()(A()),C=i()(c),E=i()(l),f=i()(p),y=i()(u);d.push([e.id,"*{\n\tbox-sizing: border-box;\n\tmargin: 0;\n}\n\nbody {\n  padding: 0;\n  height: 100vh;\n  cursor: none;\n  background-color: #3d3b3b;\n  color: white;\n  overflow: hidden;\n}\n\nheader {  \n  display: none;\n  justify-content: space-around;\n  flex-wrap: nowrap; /*in 1 line only*/\n  color: rgb(184, 238, 184);\n  text-align: center;\n  font-size: 40px;\n  font-family: Garamond, serif;\n  font-weight: bold;\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  margin-right: auto;\n  margin-left: auto;\n  user-select: none; /*******************************************/\n  -moz-user-select: none; /*******************************************/\n  -webkit-user-select: none;/*******************************************/\n  -ms-user-select: none;/*******************************************/\n}\n\nheader div {\n  flex: 1;\n}\n\nheader div span {\n  font-size: 32px;\n  position: relative;\n  top: 1px;\n}\n\nheader #bonusArrow {\n  background: url("+C+") no-repeat center; \n  background-size: 60px Auto;\n  opacity: 0;\n  -webkit-transition: opacity 0.5s ease;\n  -moz-transition: opacity 0.5s ease;\n  -o-transition: opacity 0.5s ease;\n  -ms-transition: opacity 0.5s ease;\n}\n\nheader #bonusArrow p {\n  position: relative;\n  top: 100%;\n  font-size: 22px;\n  color: #58dcf7;\n}\n\n@keyframes timerGrows {\n  0% {transform: scale(1, 1)}\n  50% {transform: scale(1.5, 1.5)}\n  100% {transform: scale(1, 1)}\n}\n\n@keyframes timerGrowsAgain {\n  0% {transform: scale(1, 1)}\n  50% {transform: scale(1.5, 1.5)}\n  100% {transform: scale(1, 1)}\n}\n\n@keyframes arrowGrows {\n  0% {transform: scale(1, 1)}\n  50% {transform: scale(1.25, 1.25)}\n  100% {transform: scale(1, 1)}\n}\n\n.cursor {\n  width: 48px;\n  height: 48px;\n  position: absolute;\n  background: url("+E+");\n  -webkit-transform: rotateZ(100deg);\n          transform: rotateZ(100deg);\n  position: absolute;\n  pointer-events: none; /*This will make the syringe transparent to clicks. \n    It will make the real cursor to click what's under the syringe*/\n  z-index: 100;\n}\n\n#instructions {\n\tbackground: linear-gradient(rgb(243, 243, 145) 30%, rgb(247, 247, 197));\n  color: black;\n  background: -webkit-linear-gradient(rgb(243, 243, 145) 30%, rgb(247, 247, 197));\n\tbackground: -webkit-gradient(linear, top, bottom, color-stop(30%, rgb(243, 243, 145)), color-stop(100%, rgb(247, 247, 197)));\n\tbackground: -moz-linear-gradient(rgb(243, 243, 145) 30%, rgb(247, 247, 197));\n\tbackground: -o-linear-gradient(rgb(243, 243, 145) 30%, rgb(247, 247, 197));\n\tbackground: -ms-linear-gradient(rgb(243, 243, 145) 30%, rgb(247, 247, 197));\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='rgb(243, 243, 145)', endColorstr='rgb(247, 247, 197)',GradientType=0 );\n  width: 50%;\n  padding: 10px;\n  border: 7px solid rgb(184, 184, 169);\n  text-align: center;\n  font-size: 40px;\n  font-family: Garamond, serif;\n  font-weight: bold;\n  position: absolute;\n  right: 0;\n  left: 0;\n  top: 22%;\n  margin-right: auto;\n  margin-left: auto;\n  z-index: 10;\n}\n\n@keyframes instructionsAppears {\n  0% {opacity: 0}\n  100% {opacity: 1}\n}\n\n#instructions p {\n  user-select: none; /*******************************************/\n  -moz-user-select: none; /*******************************************/\n  -webkit-user-select: none;/*******************************************/\n  -ms-user-select: none;/*******************************************/\n}\n\nform {\n  margin-top: 20px;\n}\n\nform label {\n  font-weight: lighter;\n  font-size: 32px;\n  position: relative;\n  top: 3px;\n}\n \n.corona {\n  display: none;\n  user-select: none; /*******************************************/\n  -moz-user-select: none; /*******************************************/\n  -webkit-user-select: none;/*******************************************/\n  -ms-user-select: none;/*******************************************/\n}\n\n#circle {\n  width: 130px;\n  height: 130px;\n  border-radius: 50%;\n  background: rgb(243, 243, 145);\n  position: absolute;\n  right: 0;\n  left: 0;\n  top: 30%;\n  bottom: 70%;\n  margin: auto;\n  z-index: 1;\n}\n\n.axis{\n  height: 184px;\n  width: 10px;\n  background: rgb(243, 243, 145);\n  position: absolute;\n  right: 0;\n  left: 0;\n  top: 30%;\n  bottom: 70%;\n  margin: auto;\n}\n\n.tinyCircleContainer {\n  height:220px;\n  width:22px;\n  background: rgb(153, 116, 240, 0);\n  position: relative;\n  display: inline-block;\n  z-index: 2;\n}\n\n.tinyCircle {\n  height:24px;\n  width:24px;\n  border-radius: 50%;\n  background: rgb(245, 194, 100);\n  position: absolute;\n  transition: background 2.5s ease;\n  -webkit-transition: background 2.5s ease;\n  -moz-transition: background 2.5s ease;\n  -o-transition: background 2.5s ease;\n  -ms-transition: background 2.5s ease;\n}\n\n.eyes {\n  height: 40px;\n  width: 80px;\n  position: absolute;\n  background: url("+f+");\n  top: 76px;\n  right: -27px;\n  z-index: 3;\n}\n\n@keyframes turnEyes {\n  0% {transform: rotateZ(180deg); opacity: 1}\n  48% {transform: rotateZ(180deg); opacity: 1}\n  49% {transform: rotateZ(180deg); opacity: 0}\n  50% {transform: rotateZ(0deg); opacity: 0}\n  51% {transform: rotateZ(0deg); opacity: 1}\n  98% {transform: rotateZ(0deg); opacity: 1}\n  99% {transform: rotateZ(0deg); opacity: 0}\n  100% {transform: rotateZ(180deg); opacity: 0}\n}\n\n.eyeShades {\n  z-index: 4;\n  height: 20px;\n  width: 76px;\n  background: rgb(243, 243, 145);\n  position: absolute;\n  z-index: 4;\n  right: -25px;\n}\n\n#topEyeshade {\n  top: 58px;\n  animation: none; /*shutTopEyeshade 3s ease infinite normal;*/\n}\n\n#bottomEyeshade{\n  top: 116px;\n  animation: none; /*shutBottomEyeshade 3s ease infinite normal;*/\n}\n\n@keyframes shutTopEyeshade {\n  0% {top: 58px}\n  11% {top: 77px}\n  15% {top: 77px}\n  22% {top: 58px}\n  100% {top: 58px}\n}\n\n@keyframes shutBottomEyeshade {\n  0% {top: 116px}\n  11% {top: 96px}\n  15% {top: 96px}\n  22% {top: 116px}\n  100% {top: 116px}\n}\n\n.figures {\n  width: 56px;\n  height: 56px;\n  position: absolute;\n  z-index: 5;\n}\n\n@keyframes fireworks {\n  0% {width: 4px; height: 4px; opacity: 1;}\n  80% {width: 64px; height: 64px; opacity: 0.8;}\n  99% {width: 64px; height: 64px; opacity: 0;}\n  100% {width: 0px; height: 0px; opacity: 0;}\n}\n\n@keyframes figureBecomesMini {\n  0% {width: 56px; height: 56px; opacity: 1}\n  30% {width: 34px; height: 34px; opacity: 1}\n  100% {width: 0px; height: 0px; opacity: 0}\n}\n\n.ambulance {\n  width: 80px;\n  height: 80px;\n  z-index: 5;\n  background: url("+y+");\n}\n\n@keyframes disappears {\n  0% {opacity: 1}\n  100% {opacity: 0}\n}\n\n\nfooter {\n  user-select: none;\n  -moz-user-select: none;\n  -webkit-user-select: none;\n  -ms-user-select: none;\n  display: none;\n}\n\n\n/*# sourceMappingURL=cursor.css.map */","",{version:3,sources:["webpack://./src/css/cursor.scss","webpack://./src/css/cursor.css"],names:[],mappings:"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",sourceRoot:""}]);const m=d},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,A,r){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var s=0;s<this.length;s++){var i=this[s][0];null!=i&&(a[i]=!0)}for(var c=0;c<e.length;c++){var l=[].concat(e[c]);o&&a[l[0]]||(void 0!==r&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=r),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),A&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=A):l[4]="".concat(A)),t.push(l))}},t}},667:e=>{e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]|(%20)/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),A="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(A," */"),a=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(a).concat([r]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var r={},a=[],s=0;s<e.length;s++){var i=e[s],c=o.base?i[0]+o.base:i[0],l=r[c]||0,p="".concat(c," ").concat(l);r[c]=l+1;var u=n(p),d={css:i[1],media:i[2],sourceMap:i[3],supports:i[4],layer:i[5]};if(-1!==u)t[u].references++,t[u].updater(d);else{var C=A(d,o);o.byIndex=s,t.splice(s,0,{identifier:p,updater:C,references:1})}a.push(p)}return a}function A(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,A){var r=o(e=e||[],A=A||{});return function(e){e=e||[];for(var a=0;a<r.length;a++){var s=n(r[a]);t[s].references--}for(var i=o(e,A),c=0;c<r.length;c++){var l=n(r[c]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}r=i}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var A=void 0!==n.layer;A&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,A&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var r=n.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},787:(e,t,n)=>{e.exports=n.p+"ambulance1.svg"},73:(e,t,n)=>{e.exports=n.p+"arrow.svg"},522:(e,t,n)=>{e.exports=n.p+"eyes.svg"},52:(e,t,n)=>{e.exports=n.p+"figure1.svg"},660:(e,t,n)=>{e.exports=n.p+"figure10.svg"},101:(e,t,n)=>{e.exports=n.p+"figure11.svg"},389:(e,t,n)=>{e.exports=n.p+"figure12.svg"},36:(e,t,n)=>{e.exports=n.p+"figure13.svg"},304:(e,t,n)=>{e.exports=n.p+"figure14.svg"},803:(e,t,n)=>{e.exports=n.p+"figure15.svg"},103:(e,t,n)=>{e.exports=n.p+"figure16.svg"},834:(e,t,n)=>{e.exports=n.p+"figure17.svg"},491:(e,t,n)=>{e.exports=n.p+"figure18.svg"},825:(e,t,n)=>{e.exports=n.p+"figure19.svg"},74:(e,t,n)=>{e.exports=n.p+"figure2.svg"},411:(e,t,n)=>{e.exports=n.p+"figure20.svg"},691:(e,t,n)=>{e.exports=n.p+"figure3.svg"},559:(e,t,n)=>{e.exports=n.p+"figure4.svg"},863:(e,t,n)=>{e.exports=n.p+"figure5.svg"},571:(e,t,n)=>{e.exports=n.p+"figure6.svg"},982:(e,t,n)=>{e.exports=n.p+"figure7.svg"},290:(e,t,n)=>{e.exports=n.p+"figure8.svg"},840:(e,t,n)=>{e.exports=n.p+"figure9.svg"},51:(e,t,n)=>{e.exports=n.p+"stars.svg"},429:(e,t,n)=>{e.exports=n.p+"syringe.svg"}},t={};function n(o){var A=t[o];if(void 0!==A)return A.exports;var r=t[o]={id:o,exports:{}};return e[o](r,r.exports,n),r.exports}n.m=e,n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var o=t.getElementsByTagName("script");o.length&&(e=o[o.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.b=document.baseURI||self.location.href,(()=>{var e=n(379),t=n.n(e),o=n(795),A=n.n(o),r=n(569),a=n.n(r),s=n(565),i=n.n(s),c=n(216),l=n.n(c),p=n(589),u=n.n(p),d=n(586),C={};C.styleTagTransform=u(),C.setAttributes=i(),C.insert=a().bind(null,"head"),C.domAPI=A(),C.insertStyleElement=l(),t()(d.Z,C),d.Z&&d.Z.locals&&d.Z.locals,n(52),n(74),n(691),n(559),n(863),n(571),n(982),n(290),n(840),n(660),n(101),n(389),n(36),n(304),n(803),n(103),n(834),n(491),n(825),n(411),n(51);var E=document.querySelector("body"),f=document.querySelector("header"),y=document.querySelector(".cursor");document.addEventListener("mousemove",(function(e){y.setAttribute("style","top: "+(e.pageY+4)+"px; left: "+(e.pageX-5)+"px;")}));var m=document.querySelector("#circle"),g=0;[1,2,3,4,5,6].forEach((function(e){var t=document.createElement("div");t.classList.add("corona","axis"),t.setAttribute("id","axis"+e),E.insertBefore(t,m.nextSibling),t.style.transform="rotateZ(".concat(g,"deg)"),g+=30;var n=document.createElement("div");n.classList.add("corona","tinyCircleContainer"),n.setAttribute("id","tinyCircleContainer"+e),E.insertBefore(n,f),n.style.top="calc(30% - 110px)",n.style.bottom="calc(70% + 110px)",n.style.right="calc(50% + ".concat(10+22*(e-1),"px)"),n.style.left="calc(50% - ".concat(10+22*(e-1),"px)");var o=30*(e-1);n.style.transform="rotateZ(".concat(o,"deg)");var A=document.createElement("div"),r=document.createElement("div");A.classList.add("corona","tinyCircle"),A.setAttribute("id","tinyCircle"+e),A.style.top="0",A.style.right="0",r.classList.add("corona","tinyCircle"),r.setAttribute("id","tinyCircle"+(e+6)),r.style.top="calc(100% - 24px)",r.style.right="0";var a=document.querySelector("#tinyCircleContainer".concat(e));a.append(A),a.append(r)}));var h=document.createElement("div");h.classList.add("eyes","corona"),document.querySelector("#tinyCircleContainer1").append(h);var B=document.createElement("div"),v=document.createElement("div");B.classList.add("corona","eyeShades"),v.classList.add("corona","eyeShades"),B.setAttribute("id","topEyeshade"),v.setAttribute("id","bottomEyeshade"),document.querySelector("#tinyCircleContainer1").append(B),document.querySelector("#tinyCircleContainer1").append(v);var x=[11,14,13,18,13,16,20,18],b=[7,10,10,14,10,20,20,20],w=["Vaccinate world's population and help fight the coronavirus disease. If you'll fail, a new variant will arrive...","you made it! But the population grew and you need to vaccinate more people now!","you made it again! Now lets see if you can do it even faster!","great job! But bats are camming. Can you vaccinate them too?","you are awesome! Now lets see if you can do it with people that are in a hurry!","amazing work! Can you also vaccinate each person in only one second?","the Corona can't beat you! Lets try it now with the bats and faster!","you're almost at the end of your journy, only one stage to go!","you did it! You saved humanity! You ended the coronavirus disease and made XXX point."],k=["Vaccinate world's population and help fight the coronavirus disease. If you'll fail, a new variant will arrive...","You made it! But the population grew and you need to vaccinate more people now!","You made it again! Now lets see if you can do it even faster!","Great job! But bats are camming. Can you vaccinate them too?","You are awesome! Now lets see if you can do it with people that are in a hurry!","Amazing work! Can you also vaccinate each person in only one second?","The Corona can't beat you! Lets try it now with the bats!","You're almost at the end of your journy, only one stage to go!","You did it! You saved humanity! You ended the coronavirus disease and made XXX point."],U=0,I=function(e){return U=e},S=E.clientWidth,Y=E.clientHeight;console.log("ourViewPortWidth: "+S+" ourViewPortHeight: "+Y);var q,M=document.querySelector("footer"),W=document.querySelector("#instructions form #startButton"),L=document.querySelector("#topEyeshade"),T=document.querySelector("#bottomEyeshade"),K=document.querySelectorAll(".tinyCircle"),z=document.querySelectorAll(".corona"),Z=document.querySelectorAll(".tinyCircleContainer"),R=document.querySelector("#instructions form label"),j=document.querySelector("#instructions form #nickname"),O=document.querySelector("#instructions p"),Q=0,X=document.querySelector("#instructions"),D=[],H=[],V=[],G=0,P=document.querySelector("header #bonusArrow");W.addEventListener("click",(function(e){e.preventDefault(),I(0);for(var t=1;t<=b[Q];t++)5!=Q||11!=t&&12!=t&&13!=t&&14!=t?V.push(t):console.log("");V.forEach((function(e){D.push("figure"+e);var t=document.createElement("div");t.classList.add("figures"),t.setAttribute("id","figure"+e),E.insertBefore(t,M),H.push(t)})),q=document.forms.nicknameForm.nickname.value;var n=localStorage.getItem("name");""!=q?(localStorage.setItem("name",q),n=localStorage.getItem("name"),console.log("Hello "+n)):""==q&&(null!=n||(n=""),console.log("Hello "+n)),R.style.display="none",j.style.display="none",z.forEach((function(e){e.style.display="block"})),Z.forEach((function(e){e.style.display="inline-block"})),X.style.display="none",L.style.animation="shutTopEyeshade 2.5s 0.65s ease infinite normal",T.style.animation="shutBottomEyeshade 2.5s 0.65s ease infinite normal",h.style.animation="turnEyes 5s 0.925s ease infinite normal",f.style.opacity="0",f.style.display="flex";var o=document.querySelector("header #score span");o.textContent=G;var A=0;window.requestAnimationFrame((function e(){A+=.03,f.style.opacity="".concat(A),f.style.opacity<"1"&&requestAnimationFrame(e)}));var r=document.querySelector("#timer");r.style.animation="none",r.classList.add("animationIsOn"),r.classList.remove("animationRemoved");var a=x[Q];r.textContent=a,r.style.animation="timerGrows 1s ".concat(a+1," ease normal"),document.querySelector("header #level span").textContent=Q+1,P.style.animation="none",P.classList.remove("animationRemoved"),P.classList.add("animationIsOn");var s=function(e){return e.style.background.includes("stars.svg")},i=setInterval((function(){a-=1,r.textContent=a}),1e3);D.forEach((function(e){var t=document.querySelector("#"+e);t.style.background="url('./".concat(e,".svg')"),t.style.top=Math.random()*(E.clientHeight-56)+"px",t.style.left=Math.random()*(E.clientWidth-56)+"px",t.style.display="block",function(e,t){var n=Math.floor(5*Math.random())-2,o=Math.floor(5*Math.random())-2;0==n&&0==o&&(n=2);var A,r=document.querySelector("#"+e),a=function(e,t){1!=U?(r.offsetTop<=1&&r.offsetLeft>=E.clientWidth-56-1?(r.style.top=Y-56-2+"px",r.style.left="2px"):r.offsetTop<=1&&r.offsetLeft<=1?(r.style.top=Y-56-2+"px",r.style.left=S-56-2+"px"):r.offsetTop>=E.clientHeight-56-1&&r.offsetLeft<=1?(r.style.top="2px",r.style.left=S-56-2+"px"):r.offsetTop>=E.clientHeight-56-1&&r.offsetLeft>=E.clientWidth-56-1?(r.style.top="2px",r.style.left="2px"):r.offsetTop<=1?(r.style.top=Y-56-2+"px",r.style.left=E.clientWidth-56-parseInt(r.style.left)+"px"):r.offsetTop>=E.clientHeight-56-1?(r.style.top="2px",r.style.left=E.clientWidth-56-parseInt(r.style.left)+"px"):r.offsetLeft<=1?(r.style.left=S-56-2+"px",r.style.top=E.clientHeight-56-parseInt(r.style.top)+"px"):r.offsetLeft>=E.clientWidth-56-1?(r.style.left="2px",r.style.top=E.clientHeight-56-parseInt(r.style.top)+"px"):(r.style.top=parseInt(r.style.top)+t+"px",r.style.left=parseInt(r.style.left)+e+"px"),console.log(r.style.background+" X: "+r.style.left+" Y: "+r.style.top)):clearInterval(A)};[11,12,13,14].some((function(e){return r.style.background.includes(e)}))?A=setInterval((function(){return a(n,o)}),9):"fast"==t?(A=setInterval((function(){return a(n,o)}),12),console.log("going fast now")):A=setInterval((function(){return a(n,o)}),20)}(e,4==Q||6==Q||7==Q?"fast":"regular");var n=function e(){t.removeEventListener("click",e),t.style.background="url(./stars.svg)",t.style.animation="fireworks 0.75s ease forwards normal",G+=10,o.textContent=G,setTimeout((function(){t.remove()}),751)};t.addEventListener("click",n),setTimeout((function(){t.removeEventListener("click",n)}),1e3*x[Q])}));var c=setInterval((function(){if(H.every(s)){if(clearInterval(c),I(1),Q+=1,clearInterval(i),r.style.animation="none",r.classList.add("animationRemoved"),r.classList.remove("animationIsOn"),0!=a){r.style.animation="timerGrowsAgain 1s ".concat(a," ease normal"),P.style.opacity="1",P.style.animation="arrowGrows 1s ".concat(a," ease normal"),P.classList.add("animationRemoved"),P.classList.remove("animationIsOn"),setTimeout((function(){P.style.opacity="0"}),1e3*a);var e=10*a,t=0;setInterval((function(){(t+=1)<=e&&(G+=1,o.textContent=G)}),100)}setTimeout((function(){D=[],H=[],V=[]}),751),z.forEach((function(e){e.style.display="none"})),O.textContent=""==n?k[Q]:n+", "+w[Q],X.style.top="22%",X.style.opacity="0",X.style.display="block",X.style.animation="instructionsAppears 2s ease forwards normal"}else 0==a&&0==H.every(s)&&(clearInterval(c),clearInterval(i),function(){I(1);var e=359*Math.random(),t=Math.floor(55*Math.random()+26),o=Math.floor(41*Math.random()+35);K.forEach((function(n){n.style.background="hsl(".concat(e,", ").concat(t,"%, ").concat(o,"%)")})),setTimeout((function(){r.style.animation="none",r.classList.add("animationRemoved"),r.classList.remove("animationIsOn")}),1e3),H.forEach((function(e){if(e.style.background.includes("figure")){e.style.top=parseInt(e.style.top)+"px",e.style.left=parseInt(e.style.left)+"px";var t=document.createElement("div");t.classList.add("ambulance"),E.insertBefore(t,M),t.style.position="absolute",t.style.top=e.style.top,t.style.left=parseInt(e.style.left)-80+"px";var n=function(){t.style.left=parseInt(t.style.left)+1+"px"};setTimeout((function(){var t=0;setInterval((function(){t<20&&(e.style.top=parseInt(e.style.top)+1+"px",t+=1)}),5)}),1200),e.style.animation="figureBecomesMini 0.5s 1.2s ease forwards normal",setInterval((function(){parseInt(t.style.left)<parseInt(e.style.left)&&(t.style.left=parseInt(t.style.left)+1+"px")}),15),setTimeout((function(){if(parseInt(t.style.left)<S){var e=setInterval(n,10);t.style.animation="disappears 3s ease forwards normal",setInterval((function(){return clearInterval(e)}),3e3)}}),1700),setTimeout((function(){H.forEach((function(e){e.remove()})),D=[],H=[],V=[]}),1700),setTimeout((function(){document.querySelectorAll(".ambulance").forEach((function(e){e.remove()}))}),4700)}})),setTimeout((function(){O.textContent=""==n?"You failed and a new variant is spreading now, but don't worry, you can try again and prevent a world catastrophe.":n+", you failed and a new variant is spreading now, but don't worry, you can try again and prevent a world catastrophe.",X.style.opacity="0",X.style.display="block",X.style.top="calc(30% + 4px)",X.style.animation="instructionsAppears 2.5s ease forwards normal"}),2e3)}())}),1)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Ly9jb3JvbmEtZ2FtZS5iaXRidWNrZXQuaW8vLi9zcmMvY3NzL2N1cnNvci5jc3MiLCJ3ZWJwYWNrOi8vY29yb25hLWdhbWUuYml0YnVja2V0LmlvLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly9jb3JvbmEtZ2FtZS5iaXRidWNrZXQuaW8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvZ2V0VXJsLmpzIiwid2VicGFjazovL2Nvcm9uYS1nYW1lLmJpdGJ1Y2tldC5pby8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzIiwid2VicGFjazovL2Nvcm9uYS1nYW1lLmJpdGJ1Y2tldC5pby8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly9jb3JvbmEtZ2FtZS5iaXRidWNrZXQuaW8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL2Nvcm9uYS1nYW1lLmJpdGJ1Y2tldC5pby8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly9jb3JvbmEtZ2FtZS5iaXRidWNrZXQuaW8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vY29yb25hLWdhbWUuYml0YnVja2V0LmlvLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vY29yb25hLWdhbWUuYml0YnVja2V0LmlvLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vY29yb25hLWdhbWUuYml0YnVja2V0LmlvL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL2Nvcm9uYS1nYW1lLmJpdGJ1Y2tldC5pby93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly9jb3JvbmEtZ2FtZS5iaXRidWNrZXQuaW8vd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL2Nvcm9uYS1nYW1lLmJpdGJ1Y2tldC5pby93ZWJwYWNrL3J1bnRpbWUvZ2xvYmFsIiwid2VicGFjazovL2Nvcm9uYS1nYW1lLmJpdGJ1Y2tldC5pby93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL2Nvcm9uYS1nYW1lLmJpdGJ1Y2tldC5pby93ZWJwYWNrL3J1bnRpbWUvcHVibGljUGF0aCIsIndlYnBhY2s6Ly9jb3JvbmEtZ2FtZS5iaXRidWNrZXQuaW8vd2VicGFjay9ydW50aW1lL2pzb25wIGNodW5rIGxvYWRpbmciLCJ3ZWJwYWNrOi8vY29yb25hLWdhbWUuYml0YnVja2V0LmlvLy4vc3JjL2Nzcy9jdXJzb3IuY3NzP2Q0MzEiLCJ3ZWJwYWNrOi8vY29yb25hLWdhbWUuYml0YnVja2V0LmlvLy4vc3JjL3NjcmlwdHMvY3Vyc29yQW5kQ29yb25hLmpzIiwid2VicGFjazovL2Nvcm9uYS1nYW1lLmJpdGJ1Y2tldC5pby8uL3NyYy9zY3JpcHRzL3N0b3J5TGluZS5qcyIsIndlYnBhY2s6Ly9jb3JvbmEtZ2FtZS5iaXRidWNrZXQuaW8vLi9zcmMvc2NyaXB0cy9maWd1cmVzTW92ZW1lbnQuanMiLCJ3ZWJwYWNrOi8vY29yb25hLWdhbWUuYml0YnVja2V0LmlvLy4vc3JjL3NjcmlwdHMvc3RhcnRHYW1lLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9nZXRVcmwuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyA9IG5ldyBVUkwoXCIuLi9pbWFnZXMvYXJyb3cuc3ZnXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzFfX18gPSBuZXcgVVJMKFwiLi4vaW1hZ2VzL3N5cmluZ2Uuc3ZnXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzJfX18gPSBuZXcgVVJMKFwiLi4vaW1hZ2VzL2V5ZXMuc3ZnXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzNfX18gPSBuZXcgVVJMKFwiLi4vaW1hZ2VzL2FtYnVsYW5jZTEuc3ZnXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzBfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzFfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xX19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8yX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMl9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfM19fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzNfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiKntcXG5cXHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xcblxcdG1hcmdpbjogMDtcXG59XFxuXFxuYm9keSB7XFxuICBwYWRkaW5nOiAwO1xcbiAgaGVpZ2h0OiAxMDB2aDtcXG4gIGN1cnNvcjogbm9uZTtcXG4gIGJhY2tncm91bmQtY29sb3I6ICMzZDNiM2I7XFxuICBjb2xvcjogd2hpdGU7XFxuICBvdmVyZmxvdzogaGlkZGVuO1xcbn1cXG5cXG5oZWFkZXIgeyAgXFxuICBkaXNwbGF5OiBub25lO1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XFxuICBmbGV4LXdyYXA6IG5vd3JhcDsgLyppbiAxIGxpbmUgb25seSovXFxuICBjb2xvcjogcmdiKDE4NCwgMjM4LCAxODQpO1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgZm9udC1zaXplOiA0MHB4O1xcbiAgZm9udC1mYW1pbHk6IEdhcmFtb25kLCBzZXJpZjtcXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgdG9wOiAwO1xcbiAgcmlnaHQ6IDA7XFxuICBsZWZ0OiAwO1xcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XFxuICB1c2VyLXNlbGVjdDogbm9uZTsgLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXFxuICAtbW96LXVzZXItc2VsZWN0OiBub25lOyAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cXG4gIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXFxuICAtbXMtdXNlci1zZWxlY3Q6IG5vbmU7LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXFxufVxcblxcbmhlYWRlciBkaXYge1xcbiAgZmxleDogMTtcXG59XFxuXFxuaGVhZGVyIGRpdiBzcGFuIHtcXG4gIGZvbnQtc2l6ZTogMzJweDtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIHRvcDogMXB4O1xcbn1cXG5cXG5oZWFkZXIgI2JvbnVzQXJyb3cge1xcbiAgYmFja2dyb3VuZDogdXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyArIFwiKSBuby1yZXBlYXQgY2VudGVyOyBcXG4gIGJhY2tncm91bmQtc2l6ZTogNjBweCBBdXRvO1xcbiAgb3BhY2l0eTogMDtcXG4gIC13ZWJraXQtdHJhbnNpdGlvbjogb3BhY2l0eSAwLjVzIGVhc2U7XFxuICAtbW96LXRyYW5zaXRpb246IG9wYWNpdHkgMC41cyBlYXNlO1xcbiAgLW8tdHJhbnNpdGlvbjogb3BhY2l0eSAwLjVzIGVhc2U7XFxuICAtbXMtdHJhbnNpdGlvbjogb3BhY2l0eSAwLjVzIGVhc2U7XFxufVxcblxcbmhlYWRlciAjYm9udXNBcnJvdyBwIHtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIHRvcDogMTAwJTtcXG4gIGZvbnQtc2l6ZTogMjJweDtcXG4gIGNvbG9yOiAjNThkY2Y3O1xcbn1cXG5cXG5Aa2V5ZnJhbWVzIHRpbWVyR3Jvd3Mge1xcbiAgMCUge3RyYW5zZm9ybTogc2NhbGUoMSwgMSl9XFxuICA1MCUge3RyYW5zZm9ybTogc2NhbGUoMS41LCAxLjUpfVxcbiAgMTAwJSB7dHJhbnNmb3JtOiBzY2FsZSgxLCAxKX1cXG59XFxuXFxuQGtleWZyYW1lcyB0aW1lckdyb3dzQWdhaW4ge1xcbiAgMCUge3RyYW5zZm9ybTogc2NhbGUoMSwgMSl9XFxuICA1MCUge3RyYW5zZm9ybTogc2NhbGUoMS41LCAxLjUpfVxcbiAgMTAwJSB7dHJhbnNmb3JtOiBzY2FsZSgxLCAxKX1cXG59XFxuXFxuQGtleWZyYW1lcyBhcnJvd0dyb3dzIHtcXG4gIDAlIHt0cmFuc2Zvcm06IHNjYWxlKDEsIDEpfVxcbiAgNTAlIHt0cmFuc2Zvcm06IHNjYWxlKDEuMjUsIDEuMjUpfVxcbiAgMTAwJSB7dHJhbnNmb3JtOiBzY2FsZSgxLCAxKX1cXG59XFxuXFxuLmN1cnNvciB7XFxuICB3aWR0aDogNDhweDtcXG4gIGhlaWdodDogNDhweDtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIGJhY2tncm91bmQ6IHVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzFfX18gKyBcIik7XFxuICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlWigxMDBkZWcpO1xcbiAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZVooMTAwZGVnKTtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHBvaW50ZXItZXZlbnRzOiBub25lOyAvKlRoaXMgd2lsbCBtYWtlIHRoZSBzeXJpbmdlIHRyYW5zcGFyZW50IHRvIGNsaWNrcy4gXFxuICAgIEl0IHdpbGwgbWFrZSB0aGUgcmVhbCBjdXJzb3IgdG8gY2xpY2sgd2hhdCdzIHVuZGVyIHRoZSBzeXJpbmdlKi9cXG4gIHotaW5kZXg6IDEwMDtcXG59XFxuXFxuI2luc3RydWN0aW9ucyB7XFxuXFx0YmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHJnYigyNDMsIDI0MywgMTQ1KSAzMCUsIHJnYigyNDcsIDI0NywgMTk3KSk7XFxuICBjb2xvcjogYmxhY2s7XFxuICBiYWNrZ3JvdW5kOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudChyZ2IoMjQzLCAyNDMsIDE0NSkgMzAlLCByZ2IoMjQ3LCAyNDcsIDE5NykpO1xcblxcdGJhY2tncm91bmQ6IC13ZWJraXQtZ3JhZGllbnQobGluZWFyLCB0b3AsIGJvdHRvbSwgY29sb3Itc3RvcCgzMCUsIHJnYigyNDMsIDI0MywgMTQ1KSksIGNvbG9yLXN0b3AoMTAwJSwgcmdiKDI0NywgMjQ3LCAxOTcpKSk7XFxuXFx0YmFja2dyb3VuZDogLW1vei1saW5lYXItZ3JhZGllbnQocmdiKDI0MywgMjQzLCAxNDUpIDMwJSwgcmdiKDI0NywgMjQ3LCAxOTcpKTtcXG5cXHRiYWNrZ3JvdW5kOiAtby1saW5lYXItZ3JhZGllbnQocmdiKDI0MywgMjQzLCAxNDUpIDMwJSwgcmdiKDI0NywgMjQ3LCAxOTcpKTtcXG5cXHRiYWNrZ3JvdW5kOiAtbXMtbGluZWFyLWdyYWRpZW50KHJnYigyNDMsIDI0MywgMTQ1KSAzMCUsIHJnYigyNDcsIDI0NywgMTk3KSk7XFxuICBmaWx0ZXI6IHByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5ncmFkaWVudCggc3RhcnRDb2xvcnN0cj0ncmdiKDI0MywgMjQzLCAxNDUpJywgZW5kQ29sb3JzdHI9J3JnYigyNDcsIDI0NywgMTk3KScsR3JhZGllbnRUeXBlPTAgKTtcXG4gIHdpZHRoOiA1MCU7XFxuICBwYWRkaW5nOiAxMHB4O1xcbiAgYm9yZGVyOiA3cHggc29saWQgcmdiKDE4NCwgMTg0LCAxNjkpO1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgZm9udC1zaXplOiA0MHB4O1xcbiAgZm9udC1mYW1pbHk6IEdhcmFtb25kLCBzZXJpZjtcXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgcmlnaHQ6IDA7XFxuICBsZWZ0OiAwO1xcbiAgdG9wOiAyMiU7XFxuICBtYXJnaW4tcmlnaHQ6IGF1dG87XFxuICBtYXJnaW4tbGVmdDogYXV0bztcXG4gIHotaW5kZXg6IDEwO1xcbn1cXG5cXG5Aa2V5ZnJhbWVzIGluc3RydWN0aW9uc0FwcGVhcnMge1xcbiAgMCUge29wYWNpdHk6IDB9XFxuICAxMDAlIHtvcGFjaXR5OiAxfVxcbn1cXG5cXG4jaW5zdHJ1Y3Rpb25zIHAge1xcbiAgdXNlci1zZWxlY3Q6IG5vbmU7IC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xcbiAgLW1vei11c2VyLXNlbGVjdDogbm9uZTsgLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXFxuICAtd2Via2l0LXVzZXItc2VsZWN0OiBub25lOy8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xcbiAgLW1zLXVzZXItc2VsZWN0OiBub25lOy8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xcbn1cXG5cXG5mb3JtIHtcXG4gIG1hcmdpbi10b3A6IDIwcHg7XFxufVxcblxcbmZvcm0gbGFiZWwge1xcbiAgZm9udC13ZWlnaHQ6IGxpZ2h0ZXI7XFxuICBmb250LXNpemU6IDMycHg7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICB0b3A6IDNweDtcXG59XFxuIFxcbi5jb3JvbmEge1xcbiAgZGlzcGxheTogbm9uZTtcXG4gIHVzZXItc2VsZWN0OiBub25lOyAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cXG4gIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7IC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xcbiAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTsvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cXG4gIC1tcy11c2VyLXNlbGVjdDogbm9uZTsvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cXG59XFxuXFxuI2NpcmNsZSB7XFxuICB3aWR0aDogMTMwcHg7XFxuICBoZWlnaHQ6IDEzMHB4O1xcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xcbiAgYmFja2dyb3VuZDogcmdiKDI0MywgMjQzLCAxNDUpO1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgcmlnaHQ6IDA7XFxuICBsZWZ0OiAwO1xcbiAgdG9wOiAzMCU7XFxuICBib3R0b206IDcwJTtcXG4gIG1hcmdpbjogYXV0bztcXG4gIHotaW5kZXg6IDE7XFxufVxcblxcbi5heGlze1xcbiAgaGVpZ2h0OiAxODRweDtcXG4gIHdpZHRoOiAxMHB4O1xcbiAgYmFja2dyb3VuZDogcmdiKDI0MywgMjQzLCAxNDUpO1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgcmlnaHQ6IDA7XFxuICBsZWZ0OiAwO1xcbiAgdG9wOiAzMCU7XFxuICBib3R0b206IDcwJTtcXG4gIG1hcmdpbjogYXV0bztcXG59XFxuXFxuLnRpbnlDaXJjbGVDb250YWluZXIge1xcbiAgaGVpZ2h0OjIyMHB4O1xcbiAgd2lkdGg6MjJweDtcXG4gIGJhY2tncm91bmQ6IHJnYigxNTMsIDExNiwgMjQwLCAwKTtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG4gIHotaW5kZXg6IDI7XFxufVxcblxcbi50aW55Q2lyY2xlIHtcXG4gIGhlaWdodDoyNHB4O1xcbiAgd2lkdGg6MjRweDtcXG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcXG4gIGJhY2tncm91bmQ6IHJnYigyNDUsIDE5NCwgMTAwKTtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQgMi41cyBlYXNlO1xcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIDIuNXMgZWFzZTtcXG4gIC1tb3otdHJhbnNpdGlvbjogYmFja2dyb3VuZCAyLjVzIGVhc2U7XFxuICAtby10cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIDIuNXMgZWFzZTtcXG4gIC1tcy10cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIDIuNXMgZWFzZTtcXG59XFxuXFxuLmV5ZXMge1xcbiAgaGVpZ2h0OiA0MHB4O1xcbiAgd2lkdGg6IDgwcHg7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICBiYWNrZ3JvdW5kOiB1cmwoXCIgKyBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8yX19fICsgXCIpO1xcbiAgdG9wOiA3NnB4O1xcbiAgcmlnaHQ6IC0yN3B4O1xcbiAgei1pbmRleDogMztcXG59XFxuXFxuQGtleWZyYW1lcyB0dXJuRXllcyB7XFxuICAwJSB7dHJhbnNmb3JtOiByb3RhdGVaKDE4MGRlZyk7IG9wYWNpdHk6IDF9XFxuICA0OCUge3RyYW5zZm9ybTogcm90YXRlWigxODBkZWcpOyBvcGFjaXR5OiAxfVxcbiAgNDklIHt0cmFuc2Zvcm06IHJvdGF0ZVooMTgwZGVnKTsgb3BhY2l0eTogMH1cXG4gIDUwJSB7dHJhbnNmb3JtOiByb3RhdGVaKDBkZWcpOyBvcGFjaXR5OiAwfVxcbiAgNTElIHt0cmFuc2Zvcm06IHJvdGF0ZVooMGRlZyk7IG9wYWNpdHk6IDF9XFxuICA5OCUge3RyYW5zZm9ybTogcm90YXRlWigwZGVnKTsgb3BhY2l0eTogMX1cXG4gIDk5JSB7dHJhbnNmb3JtOiByb3RhdGVaKDBkZWcpOyBvcGFjaXR5OiAwfVxcbiAgMTAwJSB7dHJhbnNmb3JtOiByb3RhdGVaKDE4MGRlZyk7IG9wYWNpdHk6IDB9XFxufVxcblxcbi5leWVTaGFkZXMge1xcbiAgei1pbmRleDogNDtcXG4gIGhlaWdodDogMjBweDtcXG4gIHdpZHRoOiA3NnB4O1xcbiAgYmFja2dyb3VuZDogcmdiKDI0MywgMjQzLCAxNDUpO1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgei1pbmRleDogNDtcXG4gIHJpZ2h0OiAtMjVweDtcXG59XFxuXFxuI3RvcEV5ZXNoYWRlIHtcXG4gIHRvcDogNThweDtcXG4gIGFuaW1hdGlvbjogbm9uZTsgLypzaHV0VG9wRXllc2hhZGUgM3MgZWFzZSBpbmZpbml0ZSBub3JtYWw7Ki9cXG59XFxuXFxuI2JvdHRvbUV5ZXNoYWRle1xcbiAgdG9wOiAxMTZweDtcXG4gIGFuaW1hdGlvbjogbm9uZTsgLypzaHV0Qm90dG9tRXllc2hhZGUgM3MgZWFzZSBpbmZpbml0ZSBub3JtYWw7Ki9cXG59XFxuXFxuQGtleWZyYW1lcyBzaHV0VG9wRXllc2hhZGUge1xcbiAgMCUge3RvcDogNThweH1cXG4gIDExJSB7dG9wOiA3N3B4fVxcbiAgMTUlIHt0b3A6IDc3cHh9XFxuICAyMiUge3RvcDogNThweH1cXG4gIDEwMCUge3RvcDogNThweH1cXG59XFxuXFxuQGtleWZyYW1lcyBzaHV0Qm90dG9tRXllc2hhZGUge1xcbiAgMCUge3RvcDogMTE2cHh9XFxuICAxMSUge3RvcDogOTZweH1cXG4gIDE1JSB7dG9wOiA5NnB4fVxcbiAgMjIlIHt0b3A6IDExNnB4fVxcbiAgMTAwJSB7dG9wOiAxMTZweH1cXG59XFxuXFxuLmZpZ3VyZXMge1xcbiAgd2lkdGg6IDU2cHg7XFxuICBoZWlnaHQ6IDU2cHg7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICB6LWluZGV4OiA1O1xcbn1cXG5cXG5Aa2V5ZnJhbWVzIGZpcmV3b3JrcyB7XFxuICAwJSB7d2lkdGg6IDRweDsgaGVpZ2h0OiA0cHg7IG9wYWNpdHk6IDE7fVxcbiAgODAlIHt3aWR0aDogNjRweDsgaGVpZ2h0OiA2NHB4OyBvcGFjaXR5OiAwLjg7fVxcbiAgOTklIHt3aWR0aDogNjRweDsgaGVpZ2h0OiA2NHB4OyBvcGFjaXR5OiAwO31cXG4gIDEwMCUge3dpZHRoOiAwcHg7IGhlaWdodDogMHB4OyBvcGFjaXR5OiAwO31cXG59XFxuXFxuQGtleWZyYW1lcyBmaWd1cmVCZWNvbWVzTWluaSB7XFxuICAwJSB7d2lkdGg6IDU2cHg7IGhlaWdodDogNTZweDsgb3BhY2l0eTogMX1cXG4gIDMwJSB7d2lkdGg6IDM0cHg7IGhlaWdodDogMzRweDsgb3BhY2l0eTogMX1cXG4gIDEwMCUge3dpZHRoOiAwcHg7IGhlaWdodDogMHB4OyBvcGFjaXR5OiAwfVxcbn1cXG5cXG4uYW1idWxhbmNlIHtcXG4gIHdpZHRoOiA4MHB4O1xcbiAgaGVpZ2h0OiA4MHB4O1xcbiAgei1pbmRleDogNTtcXG4gIGJhY2tncm91bmQ6IHVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzNfX18gKyBcIik7XFxufVxcblxcbkBrZXlmcmFtZXMgZGlzYXBwZWFycyB7XFxuICAwJSB7b3BhY2l0eTogMX1cXG4gIDEwMCUge29wYWNpdHk6IDB9XFxufVxcblxcblxcbmZvb3RlciB7XFxuICB1c2VyLXNlbGVjdDogbm9uZTtcXG4gIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7XFxuICAtd2Via2l0LXVzZXItc2VsZWN0OiBub25lO1xcbiAgLW1zLXVzZXItc2VsZWN0OiBub25lO1xcbiAgZGlzcGxheTogbm9uZTtcXG59XFxuXFxuXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9Y3Vyc29yLmNzcy5tYXAgKi9cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvY3NzL2N1cnNvci5zY3NzXCIsXCJ3ZWJwYWNrOi8vLi9zcmMvY3NzL2N1cnNvci5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7Q0NDQyxzQkRBWTtDQ0NaLFNEQVU7QUNDWDs7QUFFQTtFRENJLFVBQU87RUFDVixhQUFBO0VDQ0MsWUFBWTtFRENkLHlCQUFRO0VBQ0osWUFBVztFQUNYLGdCQUFZO0FDQ2hCOztBQUVBO0VEQ0ksYUFBVTtFQUNWLDZCQUFvQjtFQUFFLGlCQUFBLEVBQUEsaUJBQUE7RUNFeEIseUJBQXlCO0VEQXZCLGtCQUFZO0VBQ2YsZUFBQTtFQ0VDLDRCQUE0QjtFREE5QixpQkFBTztFQUNILGtCQUFZO0VBQ2YsTUFBQTtFQ0VDLFFBQVE7RUFDUixPQUFPO0VBQ1Asa0JBQWtCO0VBQ2xCLGlCQUFpQjtFQUNqQixpQkFBaUIsRUFBRSw0Q0FBNEM7RUFDL0Qsc0JBQXNCLEVBQUUsNENBQTRDO0VBQ3BFLHlCQUF5QixDQUFDLDRDQUE0QztFQUN0RSxxQkFBcUIsQ0FBQyw0Q0FBNEM7QUFD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OztBQUVBO0VBQ0UsSUFBSSxVQUFVO0VBQ2QsTUFBTSxVQUFVO0FBQ2xCOzs7QUFHQTtFQUNFLGlCQUFpQjtFQUNqQixzQkFBc0I7RUFDdEIseUJBQXlCO0VBQ3pCLHFCQUFxQjtFQUNyQixhQUFhO0FBQ2Y7OztBQUdBLHFDQUFxQ1wiLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdOyAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG5cbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuXG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuXG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG5cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTsgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcblxuXG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG5cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG5cbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcblxuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodXJsLCBvcHRpb25zKSB7XG4gIGlmICghb3B0aW9ucykge1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuXG4gIGlmICghdXJsKSB7XG4gICAgcmV0dXJuIHVybDtcbiAgfVxuXG4gIHVybCA9IFN0cmluZyh1cmwuX19lc01vZHVsZSA/IHVybC5kZWZhdWx0IDogdXJsKTsgLy8gSWYgdXJsIGlzIGFscmVhZHkgd3JhcHBlZCBpbiBxdW90ZXMsIHJlbW92ZSB0aGVtXG5cbiAgaWYgKC9eWydcIl0uKlsnXCJdJC8udGVzdCh1cmwpKSB7XG4gICAgdXJsID0gdXJsLnNsaWNlKDEsIC0xKTtcbiAgfVxuXG4gIGlmIChvcHRpb25zLmhhc2gpIHtcbiAgICB1cmwgKz0gb3B0aW9ucy5oYXNoO1xuICB9IC8vIFNob3VsZCB1cmwgYmUgd3JhcHBlZD9cbiAgLy8gU2VlIGh0dHBzOi8vZHJhZnRzLmNzc3dnLm9yZy9jc3MtdmFsdWVzLTMvI3VybHNcblxuXG4gIGlmICgvW1wiJygpIFxcdFxcbl18KCUyMCkvLnRlc3QodXJsKSB8fCBvcHRpb25zLm5lZWRRdW90ZXMpIHtcbiAgICByZXR1cm4gXCJcXFwiXCIuY29uY2F0KHVybC5yZXBsYWNlKC9cIi9nLCAnXFxcXFwiJykucmVwbGFjZSgvXFxuL2csIFwiXFxcXG5cIiksIFwiXFxcIlwiKTtcbiAgfVxuXG4gIHJldHVybiB1cmw7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuXG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG5cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG4gICAgICByZXR1cm4gXCIvKiMgc291cmNlVVJMPVwiLmNvbmNhdChjc3NNYXBwaW5nLnNvdXJjZVJvb3QgfHwgXCJcIikuY29uY2F0KHNvdXJjZSwgXCIgKi9cIik7XG4gICAgfSk7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuXG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBzdHlsZXNJbkRPTSA9IFtdO1xuXG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcblxuICAgIGlmIChpbmRleEJ5SWRlbnRpZmllciAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgdXBkYXRlciA9IGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpO1xuICAgICAgb3B0aW9ucy5ieUluZGV4ID0gaTtcbiAgICAgIHN0eWxlc0luRE9NLnNwbGljZShpLCAwLCB7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IHVwZGF0ZXIsXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cblxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5cbmZ1bmN0aW9uIGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIGFwaSA9IG9wdGlvbnMuZG9tQVBJKG9wdGlvbnMpO1xuICBhcGkudXBkYXRlKG9iaik7XG5cbiAgdmFyIHVwZGF0ZXIgPSBmdW5jdGlvbiB1cGRhdGVyKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXAgJiYgbmV3T2JqLnN1cHBvcnRzID09PSBvYmouc3VwcG9ydHMgJiYgbmV3T2JqLmxheWVyID09PSBvYmoubGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIHVwZGF0ZXI7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG5cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG5cbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG5cbiAgICAgIGlmIChzdHlsZXNJbkRPTVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5ET01bX2luZGV4XS51cGRhdGVyKCk7XG5cbiAgICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpOyAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuXG4gICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgfVxuICAgIH1cblxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG5cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGluc2VydEJ5U2VsZWN0b3IoaW5zZXJ0LCBzdHlsZSkge1xuICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KGluc2VydCk7XG5cbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG5cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRCeVNlbGVjdG9yOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuXG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IFwiXCI7XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cblxuICB2YXIgbmVlZExheWVyID0gdHlwZW9mIG9iai5sYXllciAhPT0gXCJ1bmRlZmluZWRcIjtcblxuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG5cbiAgY3NzICs9IG9iai5jc3M7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG5cbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9IC8vIEZvciBvbGQgSUVcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG5cblxuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xufVxuXG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxuZnVuY3Rpb24gZG9tQVBJKG9wdGlvbnMpIHtcbiAgdmFyIHN0eWxlRWxlbWVudCA9IG9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9iaikge1xuICAgICAgYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cblxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlVGFnVHJhbnNmb3JtOyIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4vLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuX193ZWJwYWNrX3JlcXVpcmVfXy5tID0gX193ZWJwYWNrX21vZHVsZXNfXztcblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmcgPSAoZnVuY3Rpb24oKSB7XG5cdGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gJ29iamVjdCcpIHJldHVybiBnbG9iYWxUaGlzO1xuXHR0cnkge1xuXHRcdHJldHVybiB0aGlzIHx8IG5ldyBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuXHR9IGNhdGNoIChlKSB7XG5cdFx0aWYgKHR5cGVvZiB3aW5kb3cgPT09ICdvYmplY3QnKSByZXR1cm4gd2luZG93O1xuXHR9XG59KSgpOyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJ2YXIgc2NyaXB0VXJsO1xuaWYgKF9fd2VicGFja19yZXF1aXJlX18uZy5pbXBvcnRTY3JpcHRzKSBzY3JpcHRVcmwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcubG9jYXRpb24gKyBcIlwiO1xudmFyIGRvY3VtZW50ID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmRvY3VtZW50O1xuaWYgKCFzY3JpcHRVcmwgJiYgZG9jdW1lbnQpIHtcblx0aWYgKGRvY3VtZW50LmN1cnJlbnRTY3JpcHQpXG5cdFx0c2NyaXB0VXJsID0gZG9jdW1lbnQuY3VycmVudFNjcmlwdC5zcmNcblx0aWYgKCFzY3JpcHRVcmwpIHtcblx0XHR2YXIgc2NyaXB0cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic2NyaXB0XCIpO1xuXHRcdGlmKHNjcmlwdHMubGVuZ3RoKSBzY3JpcHRVcmwgPSBzY3JpcHRzW3NjcmlwdHMubGVuZ3RoIC0gMV0uc3JjXG5cdH1cbn1cbi8vIFdoZW4gc3VwcG9ydGluZyBicm93c2VycyB3aGVyZSBhbiBhdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIHlvdSBtdXN0IHNwZWNpZnkgYW4gb3V0cHV0LnB1YmxpY1BhdGggbWFudWFsbHkgdmlhIGNvbmZpZ3VyYXRpb25cbi8vIG9yIHBhc3MgYW4gZW1wdHkgc3RyaW5nIChcIlwiKSBhbmQgc2V0IHRoZSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyB2YXJpYWJsZSBmcm9tIHlvdXIgY29kZSB0byB1c2UgeW91ciBvd24gbG9naWMuXG5pZiAoIXNjcmlwdFVybCkgdGhyb3cgbmV3IEVycm9yKFwiQXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCBpbiB0aGlzIGJyb3dzZXJcIik7XG5zY3JpcHRVcmwgPSBzY3JpcHRVcmwucmVwbGFjZSgvIy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcPy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcL1teXFwvXSskLywgXCIvXCIpO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5wID0gc2NyaXB0VXJsOyIsIl9fd2VicGFja19yZXF1aXJlX18uYiA9IGRvY3VtZW50LmJhc2VVUkkgfHwgc2VsZi5sb2NhdGlvbi5ocmVmO1xuXG4vLyBvYmplY3QgdG8gc3RvcmUgbG9hZGVkIGFuZCBsb2FkaW5nIGNodW5rc1xuLy8gdW5kZWZpbmVkID0gY2h1bmsgbm90IGxvYWRlZCwgbnVsbCA9IGNodW5rIHByZWxvYWRlZC9wcmVmZXRjaGVkXG4vLyBbcmVzb2x2ZSwgcmVqZWN0LCBQcm9taXNlXSA9IGNodW5rIGxvYWRpbmcsIDAgPSBjaHVuayBsb2FkZWRcbnZhciBpbnN0YWxsZWRDaHVua3MgPSB7XG5cdDE3OTogMFxufTtcblxuLy8gbm8gY2h1bmsgb24gZGVtYW5kIGxvYWRpbmdcblxuLy8gbm8gcHJlZmV0Y2hpbmdcblxuLy8gbm8gcHJlbG9hZGVkXG5cbi8vIG5vIEhNUlxuXG4vLyBubyBITVIgbWFuaWZlc3RcblxuLy8gbm8gb24gY2h1bmtzIGxvYWRlZFxuXG4vLyBubyBqc29ucCBmdW5jdGlvbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9jdXJzb3IuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9jdXJzb3IuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiY29uc3QgYm9keSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2JvZHknKTtcclxuY29uc3QgaGVhZGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignaGVhZGVyJyk7XHJcbmNvbnN0IGN1cnNvciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jdXJzb3InKTtcclxuXHJcblxyXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCBlID0+IHtcclxuICAgIC8vdGhlIGxvY2F0aW9uIG9mIHRoZSBzeXJpbmdlIGN1cnNvclxyXG4gICAgY3Vyc29yLnNldEF0dHJpYnV0ZShcInN0eWxlXCIsIFwidG9wOiBcIiArIChlLnBhZ2VZICsgNCkgKyBcInB4OyBsZWZ0OiBcIiArIChlLnBhZ2VYIC0gNSkgKyBcInB4O1wiKTtcclxufSk7XHJcblxyXG5cclxuXHJcbmNvbnN0IGF4aXMgPSBbMSwgMiwgMywgNCwgNSwgNl07IC8vZm9yIHRoZSBsaW5lcyB0aGF0IGdvIG91dCBvZiB0aGUgY29yb25hJ3MgY2VudGVyXHJcbi8vY29uc3QgYXhpc0RpdnMgPSBbXTsgLy9jb250YWlucyBhbGwgdGhlIGF4aXNEaXZzIG9mIHRoZSBjb3JvbmFcclxuLy9jb25zdCB0aW55Q2lyY2xlc0NvbnRhaW5lcnNEaXZzID0gW107XHJcbmNvbnN0IGNvcm9uYUNpcmNsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNjaXJjbGUnKTtcclxubGV0IGFuZ2xlID0gMDtcclxuXHJcblxyXG5heGlzLmZvckVhY2goZWxlbWVudCA9PiB7XHJcbiAgICAvL2NyZWF0aW5nIGRpdiBmb3IgZWFjaCBjb3JvbmEgYXhpc1xyXG4gICAgY29uc3QgaSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgICBpLmNsYXNzTGlzdC5hZGQoJ2Nvcm9uYScsICdheGlzJyk7IC8vYWRkaW5nIGNsYXNzIG5hbWVzIGZvciBvdXIgZGl2XHJcbiAgICBpLnNldEF0dHJpYnV0ZSgnaWQnLCAnYXhpcycrZWxlbWVudCk7IC8vYWRkaW5nIGlkIGZvciBvdXIgZGl2XHJcbiAgICBib2R5Lmluc2VydEJlZm9yZShpLCBjb3JvbmFDaXJjbGUubmV4dFNpYmxpbmcpOy8vcHV0dGluZyBcImlcIiBhZnRlciBjb3JvbmFDaXJjbGVcclxuICAgIC8vYXhpc0RpdnMucHVzaChpKTsgLy9wdXR0aW5nIG91ciBkaXYgaW5zaWRlIGF4aXNEaXZzIGFycmF5XHJcbiAgICBpLnN0eWxlLnRyYW5zZm9ybSA9IGByb3RhdGVaKCR7YW5nbGV9ZGVnKWA7XHJcbiAgICBhbmdsZSArPSAzMDtcclxuXHJcbiAgICAvL2NyZWF0aW5nIGRpdiBmb3IgZWFjaCBjb250YWluZXIgKGNvbnRhaW5lcnMgZm9yIHRoZSB0aW55IGNpcmNsZXMpXHJcbiAgICAvL3RoZXNlIGNvbnRhaW5lcnMgd2lsbCBoYXZlIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGNvbnN0IG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG4gICAgbi5jbGFzc0xpc3QuYWRkKCdjb3JvbmEnLCAndGlueUNpcmNsZUNvbnRhaW5lcicpOyAvL2FkZGluZyBjbGFzcyBuYW1lcyBmb3Igb3VyIGRpdlxyXG4gICAgbi5zZXRBdHRyaWJ1dGUoJ2lkJywgJ3RpbnlDaXJjbGVDb250YWluZXInK2VsZW1lbnQpOyAvL2FkZGluZyBpZCBmb3Igb3VyIGRpdlxyXG4gICAgYm9keS5pbnNlcnRCZWZvcmUobiwgaGVhZGVyKTsvL3B1dHRpbmcgXCJuXCIgYXQgdGhlIHRvcCBvZiB0aGUgcGFnZSwgc28gaXQgd2lsbCBiZSBlYXNpZXIgdG8gcHV0IGl0IG9uIHRoZSBiaWcgY2lyY2xlXHJcbiAgICAvL3RpbnlDaXJjbGVzQ29udGFpbmVyc0RpdnMucHVzaChuKTsgLy9wdXR0aW5nIG91ciBkaXYgaW5zaWRlIHRpbnlDaXJjbGVzQ29udGFpbmVyc0RpdnMgYXJyYXlcclxuICAgIG4uc3R5bGUudG9wID0gXCJjYWxjKDMwJSAtIDExMHB4KVwiOyAvL2xvY2F0aW5nIGl0IGF0IHRoZSBjZW50ZXIgb2YgdGhlIGNvcm9uYSdzIGJpZyBjaXJjbGVcclxuICAgIG4uc3R5bGUuYm90dG9tID0gXCJjYWxjKDcwJSArIDExMHB4KVwiOyBcclxuICAgIG4uc3R5bGUucmlnaHQgPSBgY2FsYyg1MCUgKyAkezEwICsgMjIqKGVsZW1lbnQgLTEpfXB4KWA7ICAgLy9sb2NhdGluZyBlYWNoIGNvbnRhaW5lciBhdCB0aGUgbG9jYXRpb24gb2YgdGhlIGZpcnN0IGNvbnRhaW5lclxyXG4gICAgbi5zdHlsZS5sZWZ0ID0gYGNhbGMoNTAlIC0gJHsxMCArIDIyKihlbGVtZW50IC0xKX1weClgOyAgXHJcbiAgICBjb25zdCBjb250YWluZXJBbmdsZSA9IDMwICogKGVsZW1lbnQgLSAxKTsgXHJcbiAgICBuLnN0eWxlLnRyYW5zZm9ybSA9IGByb3RhdGVaKCR7Y29udGFpbmVyQW5nbGV9ZGVnKWA7IC8vY2hhbmdpbmcgdGhlIGFuZ2xlIG9mIGVhY2ggY29udGFpbmVyLCBzbyBlYWNoIGNvbnRhaW5lciB3aWxsIGJlIGxvY2F0ZWQgYmVoaW5kIG9mIGVhY2ggYXhpc1xyXG4gICAgXHJcblxyXG4gICAgLy9jcmVhdGluZyBkaXYgZm9yIGVhY2ggY29yb25hJ3MgdGlueSBjaXJjbGVcclxuICAgIC8vdGhlc2UgY2lyY2xlcyB3aWxsIGhhdmUgcG9zaXRpb246IGFic29sdXRlOyBvbiB0aGVpciBmYXRoZXIgKHRoZSBjb250YWluZXIpXHJcbiAgICBjb25zdCBtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuICAgIGNvbnN0IGwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpOy8vd2UgbmVlZCAxMiB0aW55IGNpcmNsZXMgYW5kIHdlIGhhdmUgb25seSA2IGNvbnRhaW5lcnNcclxuICAgIG0uY2xhc3NMaXN0LmFkZCgnY29yb25hJywgJ3RpbnlDaXJjbGUnKTtcclxuICAgIG0uc2V0QXR0cmlidXRlKCdpZCcsICd0aW55Q2lyY2xlJytlbGVtZW50KTtcclxuICAgIG0uc3R5bGUudG9wID0gJzAnO1xyXG4gICAgbS5zdHlsZS5yaWdodCA9ICcwJztcclxuICAgIGwuY2xhc3NMaXN0LmFkZCgnY29yb25hJywgJ3RpbnlDaXJjbGUnKTtcclxuICAgIGwuc2V0QXR0cmlidXRlKCdpZCcsICd0aW55Q2lyY2xlJysoZWxlbWVudCs2KSk7XHJcbiAgICBsLnN0eWxlLnRvcCA9ICdjYWxjKDEwMCUgLSAyNHB4KSc7XHJcbiAgICBsLnN0eWxlLnJpZ2h0ID0gJzAnO1xyXG4gICAgY29uc3QgY3VycmVudENvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCN0aW55Q2lyY2xlQ29udGFpbmVyJHtlbGVtZW50fWApO1xyXG4gICAgY3VycmVudENvbnRhaW5lci5hcHBlbmQobSk7IC8vcHV0aW5nIGVhY2ggdGlueUNpcmNsZSBpbnNpZGUgaXRzIHJpZ2h0IGNvbnRhaW5lclxyXG4gICAgY3VycmVudENvbnRhaW5lci5hcHBlbmQobCk7IC8vcHV0aW5nIGVhY2ggdGlueUNpcmNsZSBpbnNpZGUgaXRzIHJpZ2h0IGNvbnRhaW5lclxyXG5cclxufSk7XHJcblxyXG5cclxuLy9jcmVhdGluZyBkaXYgZm9yIHRoZSBjb3JvbmEncyBleWVzXHJcbmNvbnN0IGV5ZXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG5leWVzLmNsYXNzTGlzdC5hZGQoJ2V5ZXMnLCAnY29yb25hJyk7XHJcbmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN0aW55Q2lyY2xlQ29udGFpbmVyMScpLmFwcGVuZChleWVzKTtcclxuXHJcbi8vLy9jcmVhdGluZyBkaXZzIGZvciB0aGUgY29yb25hJ3MgZXllIHNoYWRlc1xyXG5jb25zdCB6ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuY29uc3QgeSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbnouY2xhc3NMaXN0LmFkZCgnY29yb25hJywgJ2V5ZVNoYWRlcycpO1xyXG55LmNsYXNzTGlzdC5hZGQoJ2Nvcm9uYScsICdleWVTaGFkZXMnKTtcclxuei5zZXRBdHRyaWJ1dGUoJ2lkJywgJ3RvcEV5ZXNoYWRlJyk7XHJcbnkuc2V0QXR0cmlidXRlKCdpZCcsICdib3R0b21FeWVzaGFkZScpO1xyXG5kb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjdGlueUNpcmNsZUNvbnRhaW5lcjEnKS5hcHBlbmQoeik7XHJcbmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN0aW55Q2lyY2xlQ29udGFpbmVyMScpLmFwcGVuZCh5KTtcclxuXHJcblxyXG5leHBvcnQgeyBib2R5LCBoZWFkZXIsIGN1cnNvciwgY29yb25hQ2lyY2xlLCBleWVzIH07XHJcbiIsImltcG9ydCB7IGJvZHksIGhlYWRlciwgY3Vyc29yLCBjb3JvbmFDaXJjbGUsIGV5ZXMgfSBmcm9tICcuL2N1cnNvckFuZENvcm9uYSc7XHJcblxyXG5cclxuY29uc3Qgc2Vjb25kc0ZvckVhY2hTdGFnZSA9IFsxMSwgMTQsIDEzLCAxOCwgMTMsIDE2LCAyMCwgMThdO1xyXG4vLyBcclxuY29uc3QgZmlndXJlc1BlclN0YWdlID0gWzcsIDEwLCAxMCwgMTQsIDEwLCAyMCwgMjAsIDIwXTtcclxuXHJcbmNvbnN0IHBGYWlsdXJlID0gXCJ5b3UgZmFpbGVkIGFuZCBhIG5ldyB2YXJpYW50IGlzIHNwcmVhZGluZyBub3csIGJ1dCBkb24ndCB3b3JyeSwgeW91IGNhbiB0cnkgYWdhaW4gYW5kIHByZXZlbnQgYSB3b3JsZCBjYXRhc3Ryb3BoZVwiO1xyXG5jb25zdCBwRmFpbHVyZUFub24gPSBcIllvdSBmYWlsZWQgYW5kIGEgbmV3IHZhcmlhbnQgaXMgc3ByZWFkaW5nIG5vdywgYnV0IGRvbid0IHdvcnJ5LCB5b3UgY2FuIHRyeSBhZ2FpbiBhbmQgcHJldmVudCBhIHdvcmxkIGNhdGFzdHJvcGhlXCI7XHJcblxyXG5jb25zdCBwID0gW1xyXG5cIlZhY2NpbmF0ZSB3b3JsZCdzIHBvcHVsYXRpb24gYW5kIGhlbHAgZmlnaHQgdGhlIGNvcm9uYXZpcnVzIGRpc2Vhc2UuIElmIHlvdSdsbCBmYWlsLCBhIG5ldyB2YXJpYW50IHdpbGwgYXJyaXZlLi4uXCIsXHJcblwieW91IG1hZGUgaXQhIEJ1dCB0aGUgcG9wdWxhdGlvbiBncmV3IGFuZCB5b3UgbmVlZCB0byB2YWNjaW5hdGUgbW9yZSBwZW9wbGUgbm93IVwiLFxyXG5cInlvdSBtYWRlIGl0IGFnYWluISBOb3cgbGV0cyBzZWUgaWYgeW91IGNhbiBkbyBpdCBldmVuIGZhc3RlciFcIixcclxuXCJncmVhdCBqb2IhIEJ1dCBiYXRzIGFyZSBjYW1taW5nLiBDYW4geW91IHZhY2NpbmF0ZSB0aGVtIHRvbz9cIixcclxuXCJ5b3UgYXJlIGF3ZXNvbWUhIE5vdyBsZXRzIHNlZSBpZiB5b3UgY2FuIGRvIGl0IHdpdGggcGVvcGxlIHRoYXQgYXJlIGluIGEgaHVycnkhXCIsXHJcblwiYW1hemluZyB3b3JrISBDYW4geW91IGFsc28gdmFjY2luYXRlIGVhY2ggcGVyc29uIGluIG9ubHkgb25lIHNlY29uZD9cIixcclxuXCJ0aGUgQ29yb25hIGNhbid0IGJlYXQgeW91ISBMZXRzIHRyeSBpdCBub3cgd2l0aCB0aGUgYmF0cyBhbmQgZmFzdGVyIVwiLFxyXG5cInlvdSdyZSBhbG1vc3QgYXQgdGhlIGVuZCBvZiB5b3VyIGpvdXJueSwgb25seSBvbmUgc3RhZ2UgdG8gZ28hXCIsXHJcblwieW91IGRpZCBpdCEgWW91IHNhdmVkIGh1bWFuaXR5ISBZb3UgZW5kZWQgdGhlIGNvcm9uYXZpcnVzIGRpc2Vhc2UgYW5kIG1hZGUgWFhYIHBvaW50LlwiXHJcbl1cclxuXHJcbmNvbnN0IHBBbm9uID0gW1xyXG4gICAgXCJWYWNjaW5hdGUgd29ybGQncyBwb3B1bGF0aW9uIGFuZCBoZWxwIGZpZ2h0IHRoZSBjb3JvbmF2aXJ1cyBkaXNlYXNlLiBJZiB5b3UnbGwgZmFpbCwgYSBuZXcgdmFyaWFudCB3aWxsIGFycml2ZS4uLlwiLFxyXG4gICAgXCJZb3UgbWFkZSBpdCEgQnV0IHRoZSBwb3B1bGF0aW9uIGdyZXcgYW5kIHlvdSBuZWVkIHRvIHZhY2NpbmF0ZSBtb3JlIHBlb3BsZSBub3chXCIsXHJcbiAgICBcIllvdSBtYWRlIGl0IGFnYWluISBOb3cgbGV0cyBzZWUgaWYgeW91IGNhbiBkbyBpdCBldmVuIGZhc3RlciFcIixcclxuICAgIFwiR3JlYXQgam9iISBCdXQgYmF0cyBhcmUgY2FtbWluZy4gQ2FuIHlvdSB2YWNjaW5hdGUgdGhlbSB0b28/XCIsXHJcbiAgICBcIllvdSBhcmUgYXdlc29tZSEgTm93IGxldHMgc2VlIGlmIHlvdSBjYW4gZG8gaXQgd2l0aCBwZW9wbGUgdGhhdCBhcmUgaW4gYSBodXJyeSFcIixcclxuICAgIFwiQW1hemluZyB3b3JrISBDYW4geW91IGFsc28gdmFjY2luYXRlIGVhY2ggcGVyc29uIGluIG9ubHkgb25lIHNlY29uZD9cIixcclxuICAgIFwiVGhlIENvcm9uYSBjYW4ndCBiZWF0IHlvdSEgTGV0cyB0cnkgaXQgbm93IHdpdGggdGhlIGJhdHMhXCIsXHJcbiAgICBcIllvdSdyZSBhbG1vc3QgYXQgdGhlIGVuZCBvZiB5b3VyIGpvdXJueSwgb25seSBvbmUgc3RhZ2UgdG8gZ28hXCIsXHJcbiAgICBcIllvdSBkaWQgaXQhIFlvdSBzYXZlZCBodW1hbml0eSEgWW91IGVuZGVkIHRoZSBjb3JvbmF2aXJ1cyBkaXNlYXNlIGFuZCBtYWRlIFhYWCBwb2ludC5cIlxyXG5dXHJcblxyXG5leHBvcnQgeyBzZWNvbmRzRm9yRWFjaFN0YWdlLCBmaWd1cmVzUGVyU3RhZ2UsIHBGYWlsdXJlLCBwRmFpbHVyZUFub24sIHAsIHBBbm9uIH07IiwiaW1wb3J0IHsgYm9keSwgaGVhZGVyLCBjdXJzb3IsIGNvcm9uYUNpcmNsZSwgZXllcyB9IGZyb20gJy4vY3Vyc29yQW5kQ29yb25hJztcclxuaW1wb3J0IHsgc2Vjb25kc0ZvckVhY2hTdGFnZSwgcEZhaWx1cmUsIHBGYWlsdXJlQW5vbiwgcCwgcEFub24gfSBmcm9tICcuL3N0b3J5TGluZSc7XHJcblxyXG5cclxubGV0IHN0b3AgPSAwO1xyXG5jb25zdCBzdG9wV29ya2luZyA9IChiaW5hcnkpID0+IHN0b3AgPSBiaW5hcnk7IC8vd2UgY2FuJ3QgZXhwb3J0IFwic3RvcFwiIGFzIGxldCwgc28gd2UgbWFrZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vYSBmdW5jdGlvbiB0aGF0IHdlIGNhbiBleHBvcnQsIGFuZCBpdCdsbFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vY2hhbmdlIHRoZSB2YWx1ZSBvZiBzdG9wXHJcblxyXG5jb25zdCBvdXJWaWV3UG9ydFdpZHRoID0gYm9keS5jbGllbnRXaWR0aDsgLy9jbGllbnRXaWR0aCBzaG93cyB0aGUgd2lkdGggb2YgdGhlIGVsZW1lbnQgd2UgY2hvb3NlXHJcbmNvbnN0IG91clZpZXdQb3J0SGVpZ2h0ID0gYm9keS5jbGllbnRIZWlnaHQ7XHJcbmNvbnNvbGUubG9nICgnb3VyVmlld1BvcnRXaWR0aDogJyArIG91clZpZXdQb3J0V2lkdGggKyAnIG91clZpZXdQb3J0SGVpZ2h0OiAnICtvdXJWaWV3UG9ydEhlaWdodClcclxuXHJcblxyXG5cclxuXHJcblxyXG4vL3RoZSBidXR0b24ncyBldmVudCBsaXN0ZW5lciB3aWxsIGNhbGwgdGhpcyBmdW5jdGlvbiwgd2hpY2ggd2lsbCBtb3ZlIHRoZSBmaWd1cmVzIGluIHJhbmRvbSBkaXJlY3Rpb25zXHJcbmNvbnN0IG1vdmUgPSAoZmlndXJlLCBzcGVlZCkgPT4ge1xyXG4gICAgLy9tYWtpbmcgcmFuZG9uIGludGVnZXJzIGZvciB0aGUgZmlndXJlcyB0byBtb3ZlIGluIGRpZmZlcmVudCBkaXJlY3Rpb25zXHJcbiAgICBsZXQgcmFuZG9tSW50WCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqICgyIC0gKC0yKSArIDEpKSAtMjsgLy90aGlzIGNvbnN0IHdpbGwgZ2l2ZSBhIHJhbmRvbSBpbnRlZ2VyIGJldHdlZW4gLTIgYW5kICsyXHJcbiAgICBsZXQgcmFuZG9tSW50WSA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqICgyIC0gKC0yKSArIDEpKSAtMjsgLy90aGlzIGNvbnN0IHdpbGwgZ2l2ZSBhIHJhbmRvbSBpbnRlZ2VyIGJldHdlZW4gLTIgYW5kICsyXHJcbiAgICBpZiAocmFuZG9tSW50WCA9PSAwICYmIHJhbmRvbUludFkgPT0gMCl7XHJcbiAgICAgICAgcmFuZG9tSW50WCA9IDI7XHJcbiAgICB9XHJcbiAgIFxyXG4gICAgY29uc3QgY3VycmVudEZpZ3VyZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyMnK2ZpZ3VyZSk7XHJcblxyXG4gICAgLy90aGUgd2F5IHRoZSBmaWd1cmVzIG1vdmVcclxuICAgIGNvbnN0IGZpZ3VyZU1vdmVtZW50ID0gKHJhbmRvbUludFgsIHJhbmRvbUludFkpID0+IHtcclxuICAgICAgIFxyXG4gICAgICAgIGlmIChzdG9wID09IDEpe1xyXG4gICAgICAgICAgICBjbGVhckludGVydmFsKG1vdmVtZW50SW50ZXJ2YWwpO1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLzQgcnVsZXMgZm9yIHRoZSBjb3JuZXJzJyBjYXNlczpcclxuICAgICAgICBpZiAoKGN1cnJlbnRGaWd1cmUub2Zmc2V0VG9wIDw9IDEpICYmIChjdXJyZW50RmlndXJlLm9mZnNldExlZnQgPj0gKGJvZHkuY2xpZW50V2lkdGggLTU2IC0gMSkpKSB7XHJcbiAgICAgICAgICAgIGN1cnJlbnRGaWd1cmUuc3R5bGUudG9wID0gKChvdXJWaWV3UG9ydEhlaWdodCAtNTYgLSAyKSArICdweCcpO1xyXG4gICAgICAgICAgICBjdXJyZW50RmlndXJlLnN0eWxlLmxlZnQgPSAnMnB4JztcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAoKGN1cnJlbnRGaWd1cmUub2Zmc2V0VG9wIDw9IDEpICYmIChjdXJyZW50RmlndXJlLm9mZnNldExlZnQgPD0gMSkpIHtcclxuICAgICAgICAgICAgY3VycmVudEZpZ3VyZS5zdHlsZS50b3AgPSAoKG91clZpZXdQb3J0SGVpZ2h0IC01NiAtIDIpICsgJ3B4Jyk7XHJcbiAgICAgICAgICAgIGN1cnJlbnRGaWd1cmUuc3R5bGUubGVmdCA9ICgob3VyVmlld1BvcnRXaWR0aCAtNTYgLTIpICsgJ3B4Jyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKChjdXJyZW50RmlndXJlLm9mZnNldFRvcCA+PSAoYm9keS5jbGllbnRIZWlnaHQgLTU2IC0gMSkpICYmIChjdXJyZW50RmlndXJlLm9mZnNldExlZnQgPD0gMSkpIHtcclxuICAgICAgICAgICAgY3VycmVudEZpZ3VyZS5zdHlsZS50b3AgPSAnMnB4JztcclxuICAgICAgICAgICAgY3VycmVudEZpZ3VyZS5zdHlsZS5sZWZ0ID0gKChvdXJWaWV3UG9ydFdpZHRoIC01NiAtMikgKyAncHgnKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAoKGN1cnJlbnRGaWd1cmUub2Zmc2V0VG9wID49IChib2R5LmNsaWVudEhlaWdodCAtNTYgLSAxKSkgJiYgKGN1cnJlbnRGaWd1cmUub2Zmc2V0TGVmdCA+PSAoYm9keS5jbGllbnRXaWR0aCAtNTYgLSAxKSkpIHtcclxuICAgICAgICAgICAgY3VycmVudEZpZ3VyZS5zdHlsZS50b3AgPSAnMnB4JztcclxuICAgICAgICAgICAgY3VycmVudEZpZ3VyZS5zdHlsZS5sZWZ0ID0gJzJweCc7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vZm91ciBcImlmXCIgcnVsZXMgZm9yIGNhc2VzIHRoYXQgdGhlIGZpZ3VyZXMgcmVhY2ggdGhlIHNjcmVlbiBlZGdlczpcclxuICAgICAgICBlbHNlIGlmIChjdXJyZW50RmlndXJlLm9mZnNldFRvcCA8PSAxKSB7IC8vb2Zmc2V0VG9wIHNob3dzIHRoZSBsb2NhdGlvbiBjb21wYXJpbmcgdG8gdGhlIGZhdGhlciAodGhlIGJvZHkpLiBXZSBuZWVkIHRoYXQgb2Zmc2V0VG9wIHdpbGwgYmUgMCBvciAxIChhbmQgbm90IG9ubHkgb2Zmc2V0VG9wPTApLCBiZWNhdXNlIHNvbWV0aW1lcyB0aGUgZmlndXJlcyBkbyAyIHN0ZXBzICgyIHBpeGVscykgYXQgYSB0aW1lXHJcbiAgICAgICAgICAgIGN1cnJlbnRGaWd1cmUuc3R5bGUudG9wID0gKChvdXJWaWV3UG9ydEhlaWdodCAtNTYgLSAyKSArICdweCcpOy8vTWludXMgMiwgYmVjYXVzZSB0aGUgZmlndXJlcyB3aWxsIGJlIHN0dWNrZWQgaWYgd2Ugd2lsbCBzZW5kIHRoZW0gdG8gb3VyVmlld1BvcnRIZWlnaHRNaW51czEgb3Igb3VyVmlld1BvcnRIZWlnaHQuIEFuZCBtaW51cyA1NiBiZWNhdXNlIG9mIHRoZSBzaXplIG9mIHRoZSBmaWd1cmVzICh3ZSB3YW50IHRoZW0gdG8gZGlzYXBwZWFyIGF0IHRoZSBlZGdlIG9mIHRoZSBzY3JlZW4gYW5kIG5vdCA1NnB4IGFmdGVyIGl0KVxyXG4gICAgICAgICAgICBjdXJyZW50RmlndXJlLnN0eWxlLmxlZnQgPSAoYm9keS5jbGllbnRXaWR0aCAtNTYgLSBwYXJzZUludChjdXJyZW50RmlndXJlLnN0eWxlLmxlZnQpKSArICdweCc7XHJcbiAgICAgICAgfSBcclxuICAgICAgICBlbHNlIGlmIChjdXJyZW50RmlndXJlLm9mZnNldFRvcCA+PSAoYm9keS5jbGllbnRIZWlnaHQgLTU2IC0gMSkpIHtcclxuICAgICAgICAgICAgY3VycmVudEZpZ3VyZS5zdHlsZS50b3AgPSAnMnB4JztcclxuICAgICAgICAgICAgY3VycmVudEZpZ3VyZS5zdHlsZS5sZWZ0ID0gKGJvZHkuY2xpZW50V2lkdGggLTU2IC0gcGFyc2VJbnQoY3VycmVudEZpZ3VyZS5zdHlsZS5sZWZ0KSkgKyAncHgnO1xyXG4gICAgICAgIH0gXHJcbiAgICAgICAgZWxzZSBpZiAoY3VycmVudEZpZ3VyZS5vZmZzZXRMZWZ0IDw9IDEpIHtcclxuICAgICAgICAgICAgY3VycmVudEZpZ3VyZS5zdHlsZS5sZWZ0ID0gKChvdXJWaWV3UG9ydFdpZHRoIC01NiAtMikgKyAncHgnKTtcclxuICAgICAgICAgICAgY3VycmVudEZpZ3VyZS5zdHlsZS50b3AgPSAoYm9keS5jbGllbnRIZWlnaHQgLTU2IC0gcGFyc2VJbnQoY3VycmVudEZpZ3VyZS5zdHlsZS50b3ApKSArICdweCc7XHJcbiAgICAgICAgfSBcclxuICAgICAgICBlbHNlIGlmIChjdXJyZW50RmlndXJlLm9mZnNldExlZnQgPj0gKGJvZHkuY2xpZW50V2lkdGggLTU2IC0gMSkpIHtcclxuICAgICAgICAgICAgY3VycmVudEZpZ3VyZS5zdHlsZS5sZWZ0ID0gJzJweCc7XHJcbiAgICAgICAgICAgIGN1cnJlbnRGaWd1cmUuc3R5bGUudG9wID0gKGJvZHkuY2xpZW50SGVpZ2h0IC01NiAtIHBhcnNlSW50KGN1cnJlbnRGaWd1cmUuc3R5bGUudG9wKSkgKyAncHgnO1xyXG4gICAgICAgIH0gXHJcbiAgICAgICAgLy9pZiB0aGUgZmlndXJlIGlzIG5vdCBpbiB0aGUgZWRnZSBvciBpbiB0aGUgY29ybmVyLFxyXG4gICAgICAgIC8vdGhlbiB0aGF0J3MgdGhlIHdheSBpdCB3aWxsIG1vdmUgb24gc2NyZWVuOlxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBjdXJyZW50RmlndXJlLnN0eWxlLnRvcCA9IHBhcnNlSW50KGN1cnJlbnRGaWd1cmUuc3R5bGUudG9wKSArIHJhbmRvbUludFkgKyAncHgnOyAvL3RoZSBtZXRob2QgcGFyc2VJbnQgdGFrZXMgb25seSB0aGUgbnVtYmVyIChhbmQgbGVhdmVzIG91dCB0aGUgc3RyaW5nICdweCcgYXR0YWNoZWQgdG8gaXQ6KSBcclxuICAgICAgICAgICAgY3VycmVudEZpZ3VyZS5zdHlsZS5sZWZ0ID0gcGFyc2VJbnQoY3VycmVudEZpZ3VyZS5zdHlsZS5sZWZ0KSArIHJhbmRvbUludFggKyAncHgnO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zb2xlLmxvZyhjdXJyZW50RmlndXJlLnN0eWxlLmJhY2tncm91bmQgKyAnIFg6ICcrIGN1cnJlbnRGaWd1cmUuc3R5bGUubGVmdCArICcgWTogJyArIGN1cnJlbnRGaWd1cmUuc3R5bGUudG9wKTtcclxuXHJcbiAgICB9XHJcbiAgICBcclxuICAgIC8vbm93IHdlJ2xsIGNhbGwgdGhlIGZpZ3VyZU1vdmVtZW50IGZ1bmN0aW9uLCBidXQgdGhlIGludGVydmFsIGZvciB0aGlzIGZ1bmN0aW9uXHJcbiAgICAvL3dpbGwgYmUgaGlnaGVyIGZyZXF1ZW5jeSBmb3IgZmlndXJlcyAxMS0xNCAodGhlIGJhdHMpLiBcclxuICAgIGxldCBtb3ZlbWVudEludGVydmFsO1xyXG4gICAgY29uc3QgYmF0QXJyYXkgPSBbMTEsIDEyLCAxMywgMTRdO1xyXG4gICAgLy93ZSB3aWxsIHVzZSBzb21lKCkgbWV0aG9kLCB3aGljaCBjaGVja3MgaWYgIGF0IGxlYXN0IG9uZSBlbGVtZW50IGluIHRoZSBhcnJheVxyXG4gICAgLy9wYXNzZXMgdGhlIHRlc3QgaW1wbGVtZW50ZWQgaW5zaWRlIHNvbWUoKVxyXG4gICAgaWYgKGJhdEFycmF5LnNvbWUoZWxlbWVudCA9PiBjdXJyZW50RmlndXJlLnN0eWxlLmJhY2tncm91bmQuaW5jbHVkZXMoZWxlbWVudCkpKSB7XHJcbiAgICAgICAgbW92ZW1lbnRJbnRlcnZhbCA9IHNldEludGVydmFsKCgpID0+IGZpZ3VyZU1vdmVtZW50KHJhbmRvbUludFgsIHJhbmRvbUludFkpLCA5KTtcclxuICAgIH0gZWxzZSBpZiAoc3BlZWQgPT0gJ2Zhc3QnKSB7XHJcbiAgICAgICAgbW92ZW1lbnRJbnRlcnZhbCA9IHNldEludGVydmFsKCgpID0+IGZpZ3VyZU1vdmVtZW50KHJhbmRvbUludFgsIHJhbmRvbUludFkpLCAxMik7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCJnb2luZyBmYXN0IG5vd1wiKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgbW92ZW1lbnRJbnRlcnZhbCA9IHNldEludGVydmFsKCgpID0+IGZpZ3VyZU1vdmVtZW50KHJhbmRvbUludFgsIHJhbmRvbUludFkpLCAyMCk7XHJcbiAgICB9XHJcbiAgICBcclxuXHJcbn07XHJcblxyXG5cclxuZXhwb3J0IHsgc3RvcFdvcmtpbmcsIG91clZpZXdQb3J0V2lkdGgsIG91clZpZXdQb3J0SGVpZ2h0LCBtb3ZlIH07IiwiaW1wb3J0IHN0eWxlIGZyb20gJy4uL2Nzcy9jdXJzb3IuY3NzJztcclxuaW1wb3J0IGZpZ3VyZTEgZnJvbSAnLi4vaW1hZ2VzL2ZpZ3VyZTEuc3ZnJztcclxuaW1wb3J0IGZpZ3VyZTIgZnJvbSAnLi4vaW1hZ2VzL2ZpZ3VyZTIuc3ZnJztcclxuaW1wb3J0IGZpZ3VyZTMgZnJvbSAnLi4vaW1hZ2VzL2ZpZ3VyZTMuc3ZnJztcclxuaW1wb3J0IGZpZ3VyZTQgZnJvbSAnLi4vaW1hZ2VzL2ZpZ3VyZTQuc3ZnJztcclxuaW1wb3J0IGZpZ3VyZTUgZnJvbSAnLi4vaW1hZ2VzL2ZpZ3VyZTUuc3ZnJztcclxuaW1wb3J0IGZpZ3VyZTYgZnJvbSAnLi4vaW1hZ2VzL2ZpZ3VyZTYuc3ZnJztcclxuaW1wb3J0IGZpZ3VyZTcgZnJvbSAnLi4vaW1hZ2VzL2ZpZ3VyZTcuc3ZnJztcclxuaW1wb3J0IGZpZ3VyZTggZnJvbSAnLi4vaW1hZ2VzL2ZpZ3VyZTguc3ZnJztcclxuaW1wb3J0IGZpZ3VyZTkgZnJvbSAnLi4vaW1hZ2VzL2ZpZ3VyZTkuc3ZnJztcclxuaW1wb3J0IGZpZ3VyZTEwIGZyb20gJy4uL2ltYWdlcy9maWd1cmUxMC5zdmcnO1xyXG5pbXBvcnQgZmlndXJlMTEgZnJvbSAnLi4vaW1hZ2VzL2ZpZ3VyZTExLnN2Zyc7XHJcbmltcG9ydCBmaWd1cmUxMiBmcm9tICcuLi9pbWFnZXMvZmlndXJlMTIuc3ZnJztcclxuaW1wb3J0IGZpZ3VyZTEzIGZyb20gJy4uL2ltYWdlcy9maWd1cmUxMy5zdmcnO1xyXG5pbXBvcnQgZmlndXJlMTQgZnJvbSAnLi4vaW1hZ2VzL2ZpZ3VyZTE0LnN2Zyc7XHJcbmltcG9ydCBmaWd1cmUxNSBmcm9tICcuLi9pbWFnZXMvZmlndXJlMTUuc3ZnJztcclxuaW1wb3J0IGZpZ3VyZTE2IGZyb20gJy4uL2ltYWdlcy9maWd1cmUxNi5zdmcnO1xyXG5pbXBvcnQgZmlndXJlMTcgZnJvbSAnLi4vaW1hZ2VzL2ZpZ3VyZTE3LnN2Zyc7XHJcbmltcG9ydCBmaWd1cmUxOCBmcm9tICcuLi9pbWFnZXMvZmlndXJlMTguc3ZnJztcclxuaW1wb3J0IGZpZ3VyZTE5IGZyb20gJy4uL2ltYWdlcy9maWd1cmUxOS5zdmcnO1xyXG5pbXBvcnQgZmlndXJlMjAgZnJvbSAnLi4vaW1hZ2VzL2ZpZ3VyZTIwLnN2Zyc7XHJcbmltcG9ydCBzdGFycyBmcm9tICcuLi9pbWFnZXMvc3RhcnMuc3ZnJztcclxuaW1wb3J0IHsgYm9keSwgaGVhZGVyLCBjdXJzb3IsIGNvcm9uYUNpcmNsZSwgZXllcyB9IGZyb20gJy4vY3Vyc29yQW5kQ29yb25hJztcclxuaW1wb3J0IHsgc2Vjb25kc0ZvckVhY2hTdGFnZSwgZmlndXJlc1BlclN0YWdlLCBwRmFpbHVyZSwgcEZhaWx1cmVBbm9uLCBwLCBwQW5vbiB9IGZyb20gJy4vc3RvcnlMaW5lJztcclxuaW1wb3J0IHsgc3RvcFdvcmtpbmcsIG91clZpZXdQb3J0V2lkdGgsIG91clZpZXdQb3J0SGVpZ2h0LCBtb3ZlIH0gZnJvbSAnLi9maWd1cmVzTW92ZW1lbnQnO1xyXG5cclxuXHJcbmNvbnN0IGZvb3RlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2Zvb3RlcicpO1xyXG5jb25zdCBidXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjaW5zdHJ1Y3Rpb25zIGZvcm0gI3N0YXJ0QnV0dG9uJyk7XHJcbmNvbnN0IHRvcEV5ZXNoYWRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3RvcEV5ZXNoYWRlJyk7XHJcbmNvbnN0IGJvdHRvbUV5ZXNoYWRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2JvdHRvbUV5ZXNoYWRlJyk7XHJcbmNvbnN0IHRpbnlDaXJjbGVzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnRpbnlDaXJjbGUnKTtcclxuY29uc3QgY29yb25hID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmNvcm9uYScpO1xyXG5jb25zdCB0aW55Q2lyY2xlQ29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnRpbnlDaXJjbGVDb250YWluZXInKTtcclxuY29uc3QgZm9ybUxhYmVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2luc3RydWN0aW9ucyBmb3JtIGxhYmVsJyk7XHJcbmNvbnN0IGZvcm1UZXh0SW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjaW5zdHJ1Y3Rpb25zIGZvcm0gI25pY2tuYW1lJyk7XHJcbmNvbnN0IGluc3RydWN0aW9uc1BUYWcgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjaW5zdHJ1Y3Rpb25zIHAnKTtcclxubGV0IG5pY2tuYW1lO1xyXG5sZXQgc3RhZ2UgPSAwOy8vd2lsbCBnbyBpbnNpZGUgdGhlIGxldmVsIHRhZ1xyXG5jb25zdCBpbnN0cnVjdGlvbnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjaW5zdHJ1Y3Rpb25zJyk7XHJcbmxldCBmaWd1cmVzID0gW107IC8vZmlndXJlMSwgZmlndXJlMi4uLlxyXG5sZXQgZmlndXJlc0RpdnMgPSBbXTtcclxubGV0IG51bXNPZkZpZ3MgPSBbXTsvL2ZvciBleGFtcGxlOiBbMSwgMiwgMywgNCwgNSwgNiwgN10gZGVwZW5kcyBvbiB0aGUgbWF4IG51bWJlciBvZiBmaWd1cmVzIGluIGVhY2ggbGV2ZWxcclxubGV0IHVzZXJTY29yZSA9IDA7XHJcbmNvbnN0IGJvbnVzQXJyb3cgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdoZWFkZXIgI2JvbnVzQXJyb3cnKTtcclxubGV0IHNwZWVkOyAvL2ZpZ3VyZXMnIHNwZWVkIChDb250cm9scyB0aGUgZnJlcXVlbmN5IG9mIHRoZSBpbnRlcnZhbCBpbiB0aGUgZnVuY3Rpb24gbW92ZSlcclxuXHJcblxyXG4vL3N0YXJ0aW5nIHRoZSBnYW1lXHJcbmJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGUpID0+IHtcclxuICAgIFxyXG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpOy8vcHJldmVudCByZWZyZXNoaW5nIHRoZSBwYWdlIChkdWUgdG8gdGhlIGZvcm0pXHJcblxyXG4gICAgc3RvcFdvcmtpbmcoMCk7XHJcblxyXG4gICAgLy9hZGRpbmcgbnVtYmVycyB0byBudW1zT2ZGaWdzIGFycmF5XHJcbiAgICAvLyBpZiAoc3RhZ2UgPT0gNSkge1xyXG4gICAgLy8gICAgIG51bXNPZkZpZ3MucHVzaCgxLCAyLCAzLCA0LCA1LCA2LCA3LCA4LCA5LCAxMCwgMTUsIDE2LCAxNywgMTgsIDE5LCAyMCk7XHJcbiAgICAvLyB9IGVsc2Uge1xyXG4gICAgLy8gICAgIGZvciAobGV0IHogPSAxOyB6IDw9IGZpZ3VyZXNQZXJTdGFnZVtzdGFnZV07IHorKyl7XHJcbiAgICAvLyAgICAgICAgIG51bXNPZkZpZ3MucHVzaCh6KTtcclxuICAgIC8vICAgICB9IFxyXG4gICAgLy8gfVxyXG4gICAgZm9yIChsZXQgeiA9IDE7IHogPD0gZmlndXJlc1BlclN0YWdlW3N0YWdlXTsgeisrKXtcclxuICAgICAgICBpZiAoKHN0YWdlID09IDUpICYmICh6ID09IDExIHx8IHogPT0gMTIgfHwgeiA9PSAxMyB8fCB6ID09IDE0KSl7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiXCIpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIG51bXNPZkZpZ3MucHVzaCh6KTtcclxuICAgICAgICB9XHJcbiAgICB9IFxyXG4gICAgXHJcbiAgICAgIFxyXG4gICAgLy9kZWZpbmluZyB0aGUgZmlndXJlcycgYXJyYXlzXHJcbiAgICBudW1zT2ZGaWdzLmZvckVhY2gobnVtID0+IHtcclxuICAgICAgICAvL2FkZGluZyBmaWd1cmVzIGludG8gdGhlIGZpZ3VyZXMgYXJyYXlcclxuICAgICAgICBmaWd1cmVzLnB1c2goJ2ZpZ3VyZScrbnVtKTtcclxuICAgICAgICBcclxuICAgICAgICAvL2NyZWF0aW5nIGZpZ3VyZXMgZGl2IHRhZ3MgaW4gdGhlIGh0bWxcclxuICAgICAgICBjb25zdCBpID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICAgICAgaS5jbGFzc0xpc3QuYWRkKCdmaWd1cmVzJyk7XHJcbiAgICAgICAgaS5zZXRBdHRyaWJ1dGUoJ2lkJywgJ2ZpZ3VyZScrbnVtKTtcclxuICAgICAgICBib2R5Lmluc2VydEJlZm9yZShpLCBmb290ZXIpO1xyXG4gICAgICAgIGZpZ3VyZXNEaXZzLnB1c2goaSk7XHJcblxyXG4gICAgfSk7XHJcbiAgICAgXHJcbiAgICAvL3B1dHRpbmcgdGhlIG5pY2tuYW1lIGluIGxvY2FsIHN0b3JhZ2VcclxuICAgIG5pY2tuYW1lID0gZG9jdW1lbnQuZm9ybXMubmlja25hbWVGb3JtLm5pY2tuYW1lLnZhbHVlO1xyXG4gICAgbGV0IGxvY2FsTmFtZSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCduYW1lJyk7XHJcblxyXG4gICAgaWYgKG5pY2tuYW1lICE9ICcnKXtcclxuICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnbmFtZScsIG5pY2tuYW1lKTtcclxuICAgICAgICBsb2NhbE5hbWUgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnbmFtZScpO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwiSGVsbG8gXCIgK2xvY2FsTmFtZSk7XHJcbiAgICB9IGVsc2UgaWYgKG5pY2tuYW1lID09ICcnKXtcclxuICAgICAgICBpZiAobG9jYWxOYW1lICE9IG51bGwpe1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIkhlbGxvIFwiICtsb2NhbE5hbWUpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGxvY2FsTmFtZSA9ICcnO1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIkhlbGxvIFwiICsgbG9jYWxOYW1lKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy93ZSB3aWxsIHJlbW92ZSBwYXJ0cyBvZiB0aGUgZm9ybSB0aGF0IHdlIHdvbid0IG5lZWQgYW55IG1vcmVcclxuICAgIGZvcm1MYWJlbC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgZm9ybVRleHRJbnB1dC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgXHJcblxyXG4gICAgLy90aGUgY29yb25hIGFwcGVhcnNcclxuICAgIGNvcm9uYS5mb3JFYWNoKGVsZW1lbnQgPT4ge1xyXG4gICAgICAgIGVsZW1lbnQuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XHJcbiAgICB9KVxyXG4gICAgLy90aGUgc21hbGwgY2lyY2xlcyBvZiB0aGUgY29yb25hIGFwcGVhclxyXG4gICAgdGlueUNpcmNsZUNvbnRhaW5lci5mb3JFYWNoKGVsZW1lbnQgPT4ge1xyXG4gICAgICAgIGVsZW1lbnQuc3R5bGUuZGlzcGxheSA9ICdpbmxpbmUtYmxvY2snO1xyXG4gICAgfSlcclxuICAgIFxyXG4gICAgaW5zdHJ1Y3Rpb25zLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcblxyXG4gICAgLy90aGUgY29yb25hJ3MgZXllcyB3aWxsIGdldCBjbG9zZWQgYW5kIHR1cm4vbG9vayB0byB0aGUgb3RoZXIgc2lkZVxyXG4gICAgdG9wRXllc2hhZGUuc3R5bGUuYW5pbWF0aW9uID0gJ3NodXRUb3BFeWVzaGFkZSAyLjVzIDAuNjVzIGVhc2UgaW5maW5pdGUgbm9ybWFsJztcclxuICAgIGJvdHRvbUV5ZXNoYWRlLnN0eWxlLmFuaW1hdGlvbiA9ICdzaHV0Qm90dG9tRXllc2hhZGUgMi41cyAwLjY1cyBlYXNlIGluZmluaXRlIG5vcm1hbCc7XHJcbiAgICBleWVzLnN0eWxlLmFuaW1hdGlvbiA9ICd0dXJuRXllcyA1cyAwLjkyNXMgZWFzZSBpbmZpbml0ZSBub3JtYWwnOyBcclxuXHJcbiAgICAvL3RoZSBzY29yZSBzZWN0aW9uIGFwcGVhcnM6XHJcbiAgICBoZWFkZXIuc3R5bGUub3BhY2l0eSA9ICcwJztcclxuICAgIGhlYWRlci5zdHlsZS5kaXNwbGF5ID0gJ2ZsZXgnOyBcclxuICAgIGNvbnN0IHNjb3JlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignaGVhZGVyICNzY29yZSBzcGFuJyk7XHJcbiAgICBzY29yZS50ZXh0Q29udGVudCA9IHVzZXJTY29yZTtcclxuICAgIGxldCB5ID0gMDtcclxuICAgIC8vdGhlIG5leHQgZnVuY3Rpb24gd2lsbCBiZSBjYWxsZWQgYnk6IHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUob3BhY2l0eUNoYW5nZSk7XHJcbiAgICAvL2FuZCBpdCB3aWxsIHRlbGwgdGhlIGJyb3dzZXIgdGhhdCBJIHdpc2ggdG8gcGVyZm9ybSBhbiBhbmltYXRpb24gd2l0aCB0aGUgb3BhY2l0eVxyXG4gICAgY29uc3Qgb3BhY2l0eUNoYW5nZSA9ICgpID0+IHtcclxuICAgICAgICB5ID0geSArIDAuMDM7XHJcbiAgICAgICAgaGVhZGVyLnN0eWxlLm9wYWNpdHkgPSBgJHt5fWA7XHJcblxyXG4gICAgICAgIGlmIChoZWFkZXIuc3R5bGUub3BhY2l0eSA8ICcxJyl7XHJcbiAgICAgICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZShvcGFjaXR5Q2hhbmdlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZShvcGFjaXR5Q2hhbmdlKTtcclxuXHJcblxyXG4gICAgLy90aGUgdGltZXIgYXBwZWFyc1xyXG4gICAgY29uc3QgdGltZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjdGltZXInKTtcclxuICAgIHRpbWVyLnN0eWxlLmFuaW1hdGlvbiA9ICdub25lJzsvL2luIG9yZGVyIHRvIHJlc2V0IHRoZSBhbmltYXRpb24gb2YgdGhlIGVuZCBvZiB0aGUgbGV2ZWxcclxuICAgIHRpbWVyLmNsYXNzTGlzdC5hZGQoJ2FuaW1hdGlvbklzT24nKTsvL2JyaW5naW5nIGJhY2sgdGhlIG9yaWdpbmFsIGNsYXNzTmFtZVxyXG4gICAgdGltZXIuY2xhc3NMaXN0LnJlbW92ZSgnYW5pbWF0aW9uUmVtb3ZlZCcpOy8vYSB0ZW1wb3JhcnkgY2xhc3NOYW1lIHdlIGFkZGVkIHRvIHRoZSB0aW1lciBhdCB0aGUgZW5kIG9mIHRoZSBsZXZlbCAobm93IHdlJ3JlIHJlbW92aW5nIGl0KVxyXG4gICAgbGV0IHNlY29uZHMgPSBzZWNvbmRzRm9yRWFjaFN0YWdlW3N0YWdlXTtcclxuICAgIHRpbWVyLnRleHRDb250ZW50ID0gc2Vjb25kczsgIFxyXG4gICAgdGltZXIuc3R5bGUuYW5pbWF0aW9uID0gYHRpbWVyR3Jvd3MgMXMgJHtzZWNvbmRzKzF9IGVhc2Ugbm9ybWFsYDtcclxuICAgIFxyXG4gICAgLy90aGUgc3RhZ2UgYXBwZWFycyBvbiBzY3JlZW5cclxuICAgIGNvbnN0IGxldmVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignaGVhZGVyICNsZXZlbCBzcGFuJyk7XHJcbiAgICBsZXZlbC50ZXh0Q29udGVudCA9IHN0YWdlKzE7XHJcblxyXG4gICAgLy9yZXNldHRpbmcgdGhlIGJvbnVzQXJyb3cgYW5pbWF0aW9uIGZyb20gdGhlIGVuZCBvZiB0aGUgbGV2ZWwsIHNvIGl0J2xsIGJlIGFibGUgdG8gd29yayBhZ2FpblxyXG4gICAgYm9udXNBcnJvdy5zdHlsZS5hbmltYXRpb24gPSAnbm9uZSc7XHJcbiAgICBib251c0Fycm93LmNsYXNzTGlzdC5yZW1vdmUoJ2FuaW1hdGlvblJlbW92ZWQnKTtcclxuICAgIGJvbnVzQXJyb3cuY2xhc3NMaXN0LmFkZCgnYW5pbWF0aW9uSXNPbicpO1xyXG5cclxuXHJcbiAgICAvL2Z1bmN0aW9uIHRoYXQgd2lsbCBiZSBjYWxsZWQgZnJvbSB0aGUgY291bnREb3duIGZ1bmN0aW9uIFxyXG4gICAgLy9hbmQgYWxzbyBmcm9tIHRoZSBjaGVjayBmdW5jdGlvblxyXG4gICAgY29uc3QgY2hlY2tCYWNrZ3JvdW5kID0gKGZpZ3VyZURpdikgPT4ge1xyXG4gICAgICAgIHJldHVybiBmaWd1cmVEaXYuc3R5bGUuYmFja2dyb3VuZC5pbmNsdWRlcygnc3RhcnMuc3ZnJyk7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIC8vY291bnREb3duIGZ1bmN0aW9uIGZvciB0aGUgdGltZXIgYW5kIGNoYW5naW5nIHRoZSBjb3JvbmEncyBjb2xvciB3aGVuIG5vdCBhbGwgZmlndXJlcyB3ZXJlIGNsaWNrZWRcclxuICAgIGNvbnN0IGNvdW50RG93biA9ICgpID0+IHtcclxuICAgICAgICBzZWNvbmRzID0gc2Vjb25kcyAtIDE7ICBcclxuICAgICAgICB0aW1lci50ZXh0Q29udGVudCA9IHNlY29uZHM7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgY291bnREb3duSW50ZXJ2YWwgPSBzZXRJbnRlcnZhbChjb3VudERvd24sIDEwMDApOyAvL2Z1bmN0aW9uIGZvciB0aGUgdGltZXJcclxuXHJcblxyXG4gICAgZmlndXJlcy5mb3JFYWNoKGZpZ3VyZSA9PiB7XHJcblxyXG4gICAgICAgIGNvbnN0IGN1cnJlbnRGaWd1cmUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjJytmaWd1cmUpO1xyXG5cclxuICAgICAgICAvL2FkZGluZyBhIGJhY2tncm91bmQgaW1hZ2UgZm9yIGVhY2ggZmlndXJlOlxyXG4gICAgICAgIGN1cnJlbnRGaWd1cmUuc3R5bGUuYmFja2dyb3VuZCA9IGB1cmwoJy4vJHtmaWd1cmV9LnN2ZycpYDsgXHJcbiAgICAgICAgLy9wdXR0aW5nIHRoZSBmaWd1cmVzIGluIGRpZmZlcmVudCBwbGFjZXMgYXQgc3RhcnRpbmcgcG9pbnRcclxuICAgICAgICBjdXJyZW50RmlndXJlLnN0eWxlLnRvcCA9IE1hdGgucmFuZG9tKCkqKGJvZHkuY2xpZW50SGVpZ2h0IC0gNTYpICsgJ3B4JzsgLy81NiBpcyB0aGUgc2l6ZSBvZiB0aGUgZmlndXJlcy4gYm9keS5jbGllbnRIZWlnaHQgZ2l2ZXMgdGhlIHZpZXdwb3J0IHNpemUgd2l0aG91dCB0aGUgc2Nyb2xsIGJhclxyXG4gICAgICAgIGN1cnJlbnRGaWd1cmUuc3R5bGUubGVmdCA9IE1hdGgucmFuZG9tKCkqKGJvZHkuY2xpZW50V2lkdGggLSA1NikgKyAncHgnOyAvLzU2IGlzIHRoZSBzaXplIG9mIHRoZSBmaWd1cmVzLlxyXG4gICAgICAgIGN1cnJlbnRGaWd1cmUuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XHJcbiAgICAgICAgLy9zdGFydGluZyB0byBtb3ZlIHRoZSBmaWd1cmVzIGluIGRpZmZlcmVudCBkaXJlY3Rpb25zOlxyXG4gICAgICAgIGlmIChzdGFnZSA9PSA0IHx8IHN0YWdlID09IDYgfHwgc3RhZ2UgPT0gNyl7XHJcbiAgICAgICAgICAgIHNwZWVkID0gJ2Zhc3QnO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHNwZWVkID0gJ3JlZ3VsYXInO1xyXG4gICAgICAgIH1cclxuICAgICAgICBtb3ZlKGZpZ3VyZSwgc3BlZWQpO1xyXG5cclxuICAgICAgICBcclxuICAgICAgICAvL2Z1bmN0aW9uIGZvciBjbGlja2luZyBhIGZpZ3VyZVxyXG4gICAgICAgIGNvbnN0IHN0YXJzQW5kUG9pbnRzID0gKCkgPT4ge1xyXG4gICAgICAgICAgICBjdXJyZW50RmlndXJlLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgc3RhcnNBbmRQb2ludHMpO1xyXG4gICAgICAgICAgICBjdXJyZW50RmlndXJlLnN0eWxlLmJhY2tncm91bmQgPSAndXJsKC4vc3RhcnMuc3ZnKSc7XHJcbiAgICAgICAgICAgIGN1cnJlbnRGaWd1cmUuc3R5bGUuYW5pbWF0aW9uID0gJ2ZpcmV3b3JrcyAwLjc1cyBlYXNlIGZvcndhcmRzIG5vcm1hbCc7XHJcbiAgICAgICAgICAgIHVzZXJTY29yZSArPSAxMDtcclxuICAgICAgICAgICAgc2NvcmUudGV4dENvbnRlbnQgPSB1c2VyU2NvcmU7XHJcbiAgICAgICAgICAgIC8vZGVsZXRpbmcgdGhlIGZpZ3VyZSBmcm9tIHRoZSBET01cclxuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBjdXJyZW50RmlndXJlLnJlbW92ZSgpOyBcclxuICAgICAgICAgICAgfSwgNzUxKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vYWRkaW5nIGV2ZW50TGlzdGVuZXIgZm9yIGVhY2ggZmlndXJlIGFuZCBhZGp1c3RpbmcgdGhlIHNjb3JlXHJcbiAgICAgICAgY3VycmVudEZpZ3VyZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHN0YXJzQW5kUG9pbnRzKTtcclxuXHJcbiAgICAgICAgLy9mdW5jdGlvbiB0aGF0IHByZXZlbnRzIGNsaWNraW5nIG9uIGZpZ3VyZXMsIHdoaWxlIHRoZSBhbWJ1bGFuY2VzIGNvbWVcclxuICAgICAgICBjb25zdCBwcmV2ZW50Q2xpY2sgPSAoKSA9PiB7XHJcbiAgICAgICAgICAgIGN1cnJlbnRGaWd1cmUucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCBzdGFyc0FuZFBvaW50cyk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvL2F0IHRoZSBlbmQgb2YgdGhlIHN0YWdlIHRoZSB1c2VyIHdvbid0IGJlIGFibGUgdG8gY2xpY2sgdGhlIGZpZ3VyZXNcclxuICAgICAgICBzZXRUaW1lb3V0KHByZXZlbnRDbGljaywgc2Vjb25kc0ZvckVhY2hTdGFnZVtzdGFnZV0qMTAwMCk7XHJcblxyXG4gICAgfSlcclxuXHJcblxyXG5cclxuICAgIC8vZnVuY3Rpb24gdGhhdCB3b3JrcyBhZnRlciB0aGUgdXNlciBmYWlsZWRcclxuICAgIGNvbnN0IGZhaWxpbmdQcm9jZWR1cmUgPSAoKSA9PiB7XHJcblxyXG4gICAgICAgIHN0b3BXb3JraW5nKDEpOyAgIFxyXG5cclxuICAgICAgICAvL21ha2luZyB0aGUgY29sb3Igb2YgdGhlIGNvcm9uYSByYW5kb21seSBkaWZmZXJlbnRcclxuICAgICAgICBsZXQgaCA9IE1hdGgucmFuZG9tKCkgKiAzNTk7IC8vdGhlIEggb2cgdGhlIGhzbCBpcyAwLTM1OVxyXG4gICAgICAgIGxldCBzID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKDgwIC0gMjYgKyAxKSArIDI2KTsvL0kgZGVjaWRlZCB0aGF0IHRoZSBwZXJjZW50YWdlIG9mIHRoZSBTIGluIGhzbCB3aWxsIGJlIGJldHdlZW4gMjYgYW5kIDgwIChiZWNhdXNlIGkgZG9uJ3QgbGlrZSBtaW4gc2F0dXJhdGlvbiBhbmQgbWF4IHNhdHVyYXRpb24pXHJcbiAgICAgICAgbGV0IGwgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAoNzUgLSAzNSArIDEpICsgMzUpOy8vSSBkZWNpZGVkIHRoYXQgdGhlIHBlcmNlbnRhZ2Ugb2YgdGhlIEwgaW4gaHNsIHdpbGwgYmUgYmV0d2VlbiAzNSBhbmQgNzUgKG5vdCB0b28gbGlnaHQgYW5kIG5vdCB0b28gZGFyaylcclxuICAgICAgICB0aW55Q2lyY2xlcy5mb3JFYWNoKGNpcmNsZSA9PiB7XHJcbiAgICAgICAgICAgIGNpcmNsZS5zdHlsZS5iYWNrZ3JvdW5kID0gYGhzbCgke2h9LCAke3N9JSwgJHtsfSUpYDtcclxuICAgICAgICB9KTsgICBcclxuICAgICAgICBcclxuICAgICAgICAvL3JlbW92aW5nIHRoZSBvcmlnaW5hbCBjbGFzcyBmcm9tIHRoZSB0aW1lciwgcmVzZXRzIGl0cyBhbmltYXRpb25cclxuICAgICAgICAvL2FuZCBsZXRzIHRoZSBhbmltYXRpb24gd29yayBhZ2FpbiBuZXh0IGxldmVsIChhZnRlciBhZGRpbmcgdGhlIG9sZCBjbGFzc05hbWUgYmFjaylcclxuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgdGltZXIuc3R5bGUuYW5pbWF0aW9uID0gJ25vbmUnO1xyXG4gICAgICAgICAgICB0aW1lci5jbGFzc0xpc3QuYWRkKCdhbmltYXRpb25SZW1vdmVkJyk7XHJcbiAgICAgICAgICAgIHRpbWVyLmNsYXNzTGlzdC5yZW1vdmUoJ2FuaW1hdGlvbklzT24nKTtcclxuICAgICAgICB9LCAxMDAwKTtcclxuXHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgIGZpZ3VyZXNEaXZzLmZvckVhY2goZmlndXJlRGl2ID0+IHtcclxuXHJcbiAgICAgICAgICAgIGlmIChmaWd1cmVEaXYuc3R5bGUuYmFja2dyb3VuZC5pbmNsdWRlcygnZmlndXJlJykpe1xyXG4gICAgICAgICAgICAgICAgZmlndXJlRGl2LnN0eWxlLnRvcCA9IHBhcnNlSW50KGZpZ3VyZURpdi5zdHlsZS50b3ApICsgJ3B4JzsgLy90aGUgbWV0aG9kIHBhcnNlSW50IHRha2VzIG9ubHkgdGhlIG51bWJlciAoYW5kIGxlYXZlcyBvdXQgdGhlIHN0cmluZyAncHgnIGF0dGFjaGVkIHRvIGl0KSBcclxuICAgICAgICAgICAgICAgIGZpZ3VyZURpdi5zdHlsZS5sZWZ0ID0gcGFyc2VJbnQoZmlndXJlRGl2LnN0eWxlLmxlZnQpICsgJ3B4JztcclxuXHJcbiAgICAgICAgICAgICAgICAvL2NyZWF0aW5nIGFtYnVsYW5jZXMgYW5kIHB1dHRpbmcgdGhlbSA4MHB4IGxlZnQgdG8gZWFjaCBmaWd1cmVcclxuICAgICAgICAgICAgICAgIGNvbnN0IGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICAgICAgICAgIGkuY2xhc3NMaXN0LmFkZCgnYW1idWxhbmNlJyk7XHJcbiAgICAgICAgICAgICAgICBib2R5Lmluc2VydEJlZm9yZShpLCBmb290ZXIpO1xyXG4gICAgICAgICAgICAgICAgaS5zdHlsZS5wb3NpdGlvbiA9ICdhYnNvbHV0ZSc7XHJcbiAgICAgICAgICAgICAgICBpLnN0eWxlLnRvcCA9IGZpZ3VyZURpdi5zdHlsZS50b3A7XHJcbiAgICAgICAgICAgICAgICBpLnN0eWxlLmxlZnQgPSAocGFyc2VJbnQoZmlndXJlRGl2LnN0eWxlLmxlZnQpIC0gODApICsgXCJweFwiO1xyXG5cclxuXHJcbiAgICAgICAgICAgICAgICBjb25zdCBmaWd1cmVFbnRlcnNBbWJ1bGFuY2UgPSAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IHogPSAwO1xyXG4gICAgICAgICAgICAgICAgICAgIHNldEludGVydmFsKCgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHogPCAyMCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWd1cmVEaXYuc3R5bGUudG9wID0gcGFyc2VJbnQoZmlndXJlRGl2LnN0eWxlLnRvcCkgKyAxICsgJ3B4J1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeiArPSAxO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSwgNSAgXHJcbiAgICAgICAgICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAvL21vdmluZyB0aGUgYW1idWxhbmNlIGZyb20gdGhlIGxlZnQgb2YgdGhlIGZpZ3VyZSB0b3dhcmRzIHRoZSBmaWd1cmVcclxuICAgICAgICAgICAgICAgIGNvbnN0IG1vdmluZ0FtYnVsYW5jZSA9ICgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoIHBhcnNlSW50KGkuc3R5bGUubGVmdCkgPCBwYXJzZUludChmaWd1cmVEaXYuc3R5bGUubGVmdCkgKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaS5zdHlsZS5sZWZ0ID0gKHBhcnNlSW50KGkuc3R5bGUubGVmdCkgKyAxKSArICdweCc7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuXHJcbiAgICAgICAgICAgICAgICAvL21vdmluZ0FtYnVsYW5jZVBhcnQyIHdpbGwgY2FsbCB0aGlzIGZ1bmN0aW9uOlxyXG4gICAgICAgICAgICAgICAgY29uc3QgbW92ZVJpZ2h0ID0gKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIGkuc3R5bGUubGVmdCA9IChwYXJzZUludChpLnN0eWxlLmxlZnQpICsgMSkgKyAncHgnO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAvL21vdmluZyB0aGUgYW1idWxhbmNlIGZyb20gdGhlIGZpZ3VyZSB0byB0aGUgcmlnaHQgc2lkZSBvZiB0aGUgc2NyZWVuXHJcbiAgICAgICAgICAgICAgICBjb25zdCBtb3ZpbmdBbWJ1bGFuY2VQYXJ0MiA9ICgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBpZihwYXJzZUludChpLnN0eWxlLmxlZnQpIDwgb3VyVmlld1BvcnRXaWR0aCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG1vdmluZ1JpZ2h0ID0gc2V0SW50ZXJ2YWwobW92ZVJpZ2h0LCAxMCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGkuc3R5bGUuYW5pbWF0aW9uID0gJ2Rpc2FwcGVhcnMgM3MgZWFzZSBmb3J3YXJkcyBub3JtYWwnO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRJbnRlcnZhbCgoKSA9PiBjbGVhckludGVydmFsKG1vdmluZ1JpZ2h0KSwgMzAwMCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuXHJcbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZpZ3VyZUVudGVyc0FtYnVsYW5jZSwgMTIwMCk7XHJcbiAgICAgICAgICAgICAgICBmaWd1cmVEaXYuc3R5bGUuYW5pbWF0aW9uID0gJ2ZpZ3VyZUJlY29tZXNNaW5pIDAuNXMgMS4ycyBlYXNlIGZvcndhcmRzIG5vcm1hbCc7XHJcbiAgICAgICAgICAgICAgICBzZXRJbnRlcnZhbChtb3ZpbmdBbWJ1bGFuY2UsIDE1KTtcclxuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQobW92aW5nQW1idWxhbmNlUGFydDIsIDE3MDApO1xyXG4gICAgICAgICAgICAgICAgLy9jbGVhbmluZyBhbGwgZmlndXJlcyBhbmQgZmlndXJlcyBhcnJheXMgYWZ0ZXIgdGhleSBlbnRlcmVkIHRoZSBhbWJ1bGFuY2VcclxuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIGZpZ3VyZXNEaXZzLmZvckVhY2goZmlndXJlID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZmlndXJlLnJlbW92ZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgZmlndXJlcyA9IFtdOyBcclxuICAgICAgICAgICAgICAgICAgICBmaWd1cmVzRGl2cyA9IFtdO1xyXG4gICAgICAgICAgICAgICAgICAgIG51bXNPZkZpZ3MgPSBbXTtcclxuICAgICAgICAgICAgICAgIH0sIDE3MDApO1xyXG4gICAgICAgICAgICAgICAgLy9jbGVhbmluZyB0aGUgYW1idWxhbmNlcyBhZnRlciB0aGV5IGZpbmlzaGVkIHRoZWlyIHdvcmtcclxuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGFtYnVsYW5jZXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuYW1idWxhbmNlJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgYW1idWxhbmNlcy5mb3JFYWNoKGFtYnVsYW5jZSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGFtYnVsYW5jZS5yZW1vdmUoKTtcclxuICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgfSwgNDcwMCk7XHJcbiAgICAgICAgICAgIH0gXHJcbiAgICAgICAgfSlcclxuXHJcbiAgICAgICAgLy9icmluZ2luZyBiYWNrIHRoZSBpbnN0cmFjdGlvbidzIGJveFxyXG4gICAgICAgIGNvbnN0IGJyaW5naW5nQmFja0luc3RydWN0aW9ucyA9ICgpID0+IHtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGlmKGxvY2FsTmFtZSA9PSAnJyl7XHJcbiAgICAgICAgICAgICAgICBpbnN0cnVjdGlvbnNQVGFnLnRleHRDb250ZW50ID0gXCJZb3UgZmFpbGVkIGFuZCBhIG5ldyB2YXJpYW50IGlzIHNwcmVhZGluZyBub3csIGJ1dCBkb24ndCB3b3JyeSwgeW91IGNhbiB0cnkgYWdhaW4gYW5kIHByZXZlbnQgYSB3b3JsZCBjYXRhc3Ryb3BoZS5cIjtcclxuICAgICAgICAgICAgfSBlbHNlIHsgICAgXHJcbiAgICAgICAgICAgICAgICBpbnN0cnVjdGlvbnNQVGFnLnRleHRDb250ZW50ID0gbG9jYWxOYW1lICsgJywnICsgXCIgeW91IGZhaWxlZCBhbmQgYSBuZXcgdmFyaWFudCBpcyBzcHJlYWRpbmcgbm93LCBidXQgZG9uJ3Qgd29ycnksIHlvdSBjYW4gdHJ5IGFnYWluIGFuZCBwcmV2ZW50IGEgd29ybGQgY2F0YXN0cm9waGUuXCI7IFxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpbnN0cnVjdGlvbnMuc3R5bGUub3BhY2l0eSA9ICcwJztcclxuICAgICAgICAgICAgaW5zdHJ1Y3Rpb25zLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xyXG4gICAgICAgICAgICBpbnN0cnVjdGlvbnMuc3R5bGUudG9wID0gJ2NhbGMoMzAlICsgNHB4KSc7XHJcbiAgICAgICAgICAgIGluc3RydWN0aW9ucy5zdHlsZS5hbmltYXRpb24gPSAnaW5zdHJ1Y3Rpb25zQXBwZWFycyAyLjVzIGVhc2UgZm9yd2FyZHMgbm9ybWFsJzsgICAgICAgICAgICBcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgc2V0VGltZW91dChicmluZ2luZ0JhY2tJbnN0cnVjdGlvbnMsIDIwMDApO1xyXG4gICAgfVxyXG4gICBcclxuXHJcbiAgICAvL2Z1bmN0aW9uIHRoYXQgY2hlY2tzIGlmIGFsbCB0aGUgZmlndXJlcyB3ZXJlIGNsaWNrZWQgb3IgaWYgdGhlIHRpbWUgb2YgdGhlIGxldmVsIGVuZGVkXHJcbiAgICBjb25zdCBlbmRMZXZlbENoZWNrID0gKCkgPT4ge1xyXG4gICAgICAgIGlmIChmaWd1cmVzRGl2cy5ldmVyeShjaGVja0JhY2tncm91bmQpKSB7ICAvL1wiZXZlcnlcIiByZXR1cm5zIHRydWUgaWYgdGhlIGZ1bmN0aW9uIHJldHVybnMgdHJ1ZSBmb3IgYWxsIGVsZW1lbnRzIGluIHRoZSBhcnJheSAoaWYgYWxsIGZpZ3VyZXMgYmVjYW1lIHN0YXJzKVxyXG4gICAgICAgICAgICBjbGVhckludGVydmFsKGVuZExldmVsKTtcclxuICAgICAgICAgICAgc3RvcFdvcmtpbmcoMSk7IC8vdGhlIHN0YXJzIHdpbGwgc3RvcCBtb3ZpbmdcclxuICAgICAgICAgICAgc3RhZ2UgKz0gMTtcclxuICAgICAgICAgICAgY2xlYXJJbnRlcnZhbChjb3VudERvd25JbnRlcnZhbCk7IC8vdGhlIGNsb2NrIHdpbGwgc3RvcFxyXG4gICAgICAgICAgICB0aW1lci5zdHlsZS5hbmltYXRpb24gPSAnbm9uZSc7XHJcbiAgICAgICAgICAgIHRpbWVyLmNsYXNzTGlzdC5hZGQoJ2FuaW1hdGlvblJlbW92ZWQnKTtcclxuICAgICAgICAgICAgdGltZXIuY2xhc3NMaXN0LnJlbW92ZSgnYW5pbWF0aW9uSXNPbicpOy8vcmVtb3ZpbmcgdGhpcyBjbGFzcyByZXNldHMgdGhlIGFuaW1hdGlvbiBmb3IgdGhpcyBlbGVtZW50IGFuZCBsZXRzIHVzIHVzZSBpdCBhZ2FpbiBhZnRlciBhZGRpbmcgdGhpcyBjbGFzcyBiYWNrXHJcblxyXG4gICAgICAgICAgICBpZiAoc2Vjb25kcyAhPSAwKSB7XHJcbiAgICAgICAgICAgICAgICB0aW1lci5zdHlsZS5hbmltYXRpb24gPSBgdGltZXJHcm93c0FnYWluIDFzICR7c2Vjb25kc30gZWFzZSBub3JtYWxgO1xyXG5cclxuICAgICAgICAgICAgICAgIGJvbnVzQXJyb3cuc3R5bGUub3BhY2l0eSA9ICcxJztcclxuICAgICAgICAgICAgICAgIGJvbnVzQXJyb3cuc3R5bGUuYW5pbWF0aW9uID0gYGFycm93R3Jvd3MgMXMgJHtzZWNvbmRzfSBlYXNlIG5vcm1hbGA7XHJcbiAgICAgICAgICAgICAgICBib251c0Fycm93LmNsYXNzTGlzdC5hZGQoJ2FuaW1hdGlvblJlbW92ZWQnKTtcclxuICAgICAgICAgICAgICAgIGJvbnVzQXJyb3cuY2xhc3NMaXN0LnJlbW92ZSgnYW5pbWF0aW9uSXNPbicpOy8vcmVtb3ZpbmcgdGhpcyBjbGFzcyByZXNldHMgdGhlIGFuaW1hdGlvbiBmb3IgdGhpcyBlbGVtZW50IGFuZCBsZXRzIHVzIHVzZSBpdCBhZ2FpbiBhZnRlciBhZGRpbmcgdGhpcyBjbGFzcyBiYWNrXHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIGJvbnVzQXJyb3cuc3R5bGUub3BhY2l0eSA9ICcwJztcclxuICAgICAgICAgICAgICAgIH0sIChzZWNvbmRzKjEwMDApKTtcclxuXHJcbiAgICAgICAgICAgICAgICBsZXQgYm9udXMgPSAoc2Vjb25kcyAqIDEwKTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGkgPSAxO1xyXG4gICAgICAgICAgICAgICAgbGV0IGNvdW50ID0gMDtcclxuICAgICAgICAgICAgICAgIHNldEludGVydmFsKCgpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgY291bnQgPSBjb3VudCArIGk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNvdW50IDw9IGJvbnVzKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdXNlclNjb3JlICs9IDE7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNjb3JlLnRleHRDb250ZW50ID0gdXNlclNjb3JlO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gXHJcbiAgICAgICAgICAgICAgICB9LCAxMDApO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAvL2NsZWFuaW5nIHRoZSBmaWd1cmVzIGFycmF5cyAoaW4gb3JkZXIgdG8gZ2V0IHJlYWR5IGZvciBuZXh0IGxldmVsKTpcclxuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBmaWd1cmVzID0gW107IFxyXG4gICAgICAgICAgICAgICAgZmlndXJlc0RpdnMgPSBbXTtcclxuICAgICAgICAgICAgICAgIG51bXNPZkZpZ3MgPSBbXTtcclxuICAgICAgICAgICAgfSwgNzUxKTsgLy9hZnRlciB0aGUgbGFzdCBmaXJld29yayBlbmRlZCBpdHMgd29ya1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgLy9oaWRpbmcgdGhlIGNvcm9uYVxyXG4gICAgICAgICAgICBjb3JvbmEuZm9yRWFjaChlbGVtZW50ID0+IHtcclxuICAgICAgICAgICAgICAgIGVsZW1lbnQuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIC8vYnJpbmdpbmcgYmFjayB0aGUgaW5zdHJhY3Rpb24ncyBib3hcclxuICAgICAgICAgICAgaWYobG9jYWxOYW1lID09ICcnKXtcclxuICAgICAgICAgICAgICAgIGluc3RydWN0aW9uc1BUYWcudGV4dENvbnRlbnQgPSBwQW5vbltzdGFnZV07IC8vcEFub24gaXMgdGhlIHRleHQgYXBwZWFycyBpbiBzdG9yeUxpbmUuanNcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGluc3RydWN0aW9uc1BUYWcudGV4dENvbnRlbnQgPSBsb2NhbE5hbWUgKyAnLCAnICsgcFtzdGFnZV07IC8vLy9wIGlzIHRoZSB0ZXh0IGFwcGVhcnMgaW4gc3RvcnlMaW5lLmpzXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaW5zdHJ1Y3Rpb25zLnN0eWxlLnRvcCA9ICcyMiUnO1xyXG4gICAgICAgICAgICBpbnN0cnVjdGlvbnMuc3R5bGUub3BhY2l0eSA9ICcwJztcclxuICAgICAgICAgICAgaW5zdHJ1Y3Rpb25zLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xyXG4gICAgICAgICAgICBpbnN0cnVjdGlvbnMuc3R5bGUuYW5pbWF0aW9uID0gJ2luc3RydWN0aW9uc0FwcGVhcnMgMnMgZWFzZSBmb3J3YXJkcyBub3JtYWwnOyAgICAgICAgICAgIFxyXG5cclxuXHJcbiAgICAgICAgfSBlbHNlIGlmIChzZWNvbmRzID09IDAgJiYgZmlndXJlc0RpdnMuZXZlcnkoY2hlY2tCYWNrZ3JvdW5kKSA9PSBmYWxzZSkgeyAvL2lmIG5vdCBhbGwgZmlndXJlcyBiZWNhbWUgc3RhcnMgYW5kIHRoZSBzZWNvbmRzIGVuZGVkXHJcbiAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwoZW5kTGV2ZWwpO1xyXG4gICAgICAgICAgICBjbGVhckludGVydmFsKGNvdW50RG93bkludGVydmFsKTsgLy90aGUgY2xvY2sgd2lsbCBzdG9wXHJcbiAgICAgICAgICAgIGZhaWxpbmdQcm9jZWR1cmUoKTsvL2Z1bmN0aW9uIHRoYXQgYnJpbmdzIHRoZSBhbWJ1bGFuY2VzXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuXHJcbiAgICBjb25zdCBlbmRMZXZlbCA9IHNldEludGVydmFsKGVuZExldmVsQ2hlY2ssIDEpOyBcclxuXHJcbn0pO1xyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuIl0sIm5hbWVzIjpbIl9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fIiwiVVJMIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzFfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMl9fXyIsIl9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8zX19fIiwiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8wX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMV9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzJfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8zX19fIiwicHVzaCIsIm1vZHVsZSIsImlkIiwiZXhwb3J0cyIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJuZWVkTGF5ZXIiLCJjb25jYXQiLCJsZW5ndGgiLCJqb2luIiwiaSIsIm1vZHVsZXMiLCJtZWRpYSIsImRlZHVwZSIsInN1cHBvcnRzIiwibGF5ZXIiLCJ1bmRlZmluZWQiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiayIsIl9rIiwidXJsIiwib3B0aW9ucyIsIlN0cmluZyIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwidGVzdCIsInNsaWNlIiwiaGFzaCIsIm5lZWRRdW90ZXMiLCJyZXBsYWNlIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwic291cmNlTWFwcGluZyIsInNvdXJjZVVSTHMiLCJzb3VyY2VzIiwic291cmNlIiwic291cmNlUm9vdCIsInN0eWxlc0luRE9NIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiYmFzZSIsImNvdW50IiwiaW5kZXhCeUlkZW50aWZpZXIiLCJvYmoiLCJjc3MiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwidXBkYXRlciIsImFkZEVsZW1lbnRTdHlsZSIsImJ5SW5kZXgiLCJzcGxpY2UiLCJhcGkiLCJkb21BUEkiLCJ1cGRhdGUiLCJuZXdPYmoiLCJyZW1vdmUiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwiaW5kZXgiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsIm1lbW8iLCJpbnNlcnQiLCJzdHlsZSIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwid2luZG93IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsImdldFRhcmdldCIsIkVycm9yIiwiYXBwZW5kQ2hpbGQiLCJlbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGVzIiwic3R5bGVFbGVtZW50Iiwibm9uY2UiLCJzZXRBdHRyaWJ1dGUiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZVRhZ1RyYW5zZm9ybSIsImFwcGx5IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwicmVtb3ZlU3R5bGVFbGVtZW50Iiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJmaXJzdENoaWxkIiwiY3JlYXRlVGV4dE5vZGUiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwibSIsIm4iLCJnZXR0ZXIiLCJkIiwiYSIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZyIsImdsb2JhbFRoaXMiLCJGdW5jdGlvbiIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJzY3JpcHRVcmwiLCJpbXBvcnRTY3JpcHRzIiwibG9jYXRpb24iLCJjdXJyZW50U2NyaXB0Iiwic3JjIiwic2NyaXB0cyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwicCIsImIiLCJiYXNlVVJJIiwic2VsZiIsImhyZWYiLCJib2R5IiwiaGVhZGVyIiwiY3Vyc29yIiwiYWRkRXZlbnRMaXN0ZW5lciIsInBhZ2VZIiwicGFnZVgiLCJjb3JvbmFDaXJjbGUiLCJhbmdsZSIsImZvckVhY2giLCJjbGFzc0xpc3QiLCJhZGQiLCJpbnNlcnRCZWZvcmUiLCJuZXh0U2libGluZyIsInRyYW5zZm9ybSIsInRvcCIsImJvdHRvbSIsInJpZ2h0IiwibGVmdCIsImNvbnRhaW5lckFuZ2xlIiwibCIsImN1cnJlbnRDb250YWluZXIiLCJhcHBlbmQiLCJleWVzIiwieiIsInkiLCJzZWNvbmRzRm9yRWFjaFN0YWdlIiwiZmlndXJlc1BlclN0YWdlIiwicEFub24iLCJzdG9wIiwic3RvcFdvcmtpbmciLCJiaW5hcnkiLCJvdXJWaWV3UG9ydFdpZHRoIiwiY2xpZW50V2lkdGgiLCJvdXJWaWV3UG9ydEhlaWdodCIsImNsaWVudEhlaWdodCIsImNvbnNvbGUiLCJsb2ciLCJuaWNrbmFtZSIsImZvb3RlciIsImJ1dHRvbiIsInRvcEV5ZXNoYWRlIiwiYm90dG9tRXllc2hhZGUiLCJ0aW55Q2lyY2xlcyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJjb3JvbmEiLCJ0aW55Q2lyY2xlQ29udGFpbmVyIiwiZm9ybUxhYmVsIiwiZm9ybVRleHRJbnB1dCIsImluc3RydWN0aW9uc1BUYWciLCJzdGFnZSIsImluc3RydWN0aW9ucyIsImZpZ3VyZXMiLCJmaWd1cmVzRGl2cyIsIm51bXNPZkZpZ3MiLCJ1c2VyU2NvcmUiLCJib251c0Fycm93IiwicHJldmVudERlZmF1bHQiLCJudW0iLCJmb3JtcyIsIm5pY2tuYW1lRm9ybSIsInZhbHVlIiwibG9jYWxOYW1lIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsInNldEl0ZW0iLCJkaXNwbGF5IiwiYW5pbWF0aW9uIiwib3BhY2l0eSIsInNjb3JlIiwidGV4dENvbnRlbnQiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJvcGFjaXR5Q2hhbmdlIiwidGltZXIiLCJzZWNvbmRzIiwiY2hlY2tCYWNrZ3JvdW5kIiwiZmlndXJlRGl2IiwiYmFja2dyb3VuZCIsImluY2x1ZGVzIiwiY291bnREb3duSW50ZXJ2YWwiLCJzZXRJbnRlcnZhbCIsImZpZ3VyZSIsImN1cnJlbnRGaWd1cmUiLCJNYXRoIiwicmFuZG9tIiwic3BlZWQiLCJyYW5kb21JbnRYIiwiZmxvb3IiLCJyYW5kb21JbnRZIiwibW92ZW1lbnRJbnRlcnZhbCIsImZpZ3VyZU1vdmVtZW50Iiwib2Zmc2V0VG9wIiwib2Zmc2V0TGVmdCIsInBhcnNlSW50IiwiY2xlYXJJbnRlcnZhbCIsInNvbWUiLCJtb3ZlIiwic3RhcnNBbmRQb2ludHMiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwic2V0VGltZW91dCIsImVuZExldmVsIiwiZXZlcnkiLCJib251cyIsImgiLCJzIiwiY2lyY2xlIiwicG9zaXRpb24iLCJtb3ZlUmlnaHQiLCJtb3ZpbmdSaWdodCIsImFtYnVsYW5jZSIsImZhaWxpbmdQcm9jZWR1cmUiXSwic291cmNlUm9vdCI6IiJ9